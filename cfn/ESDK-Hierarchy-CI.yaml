AWSTemplateFormatVersion: "2010-09-09"
Description: "DDB Table and IAM Managed Policies/Role for AWS KMS Hierarchical Keyring Testing"

Parameters:
  KeyStoreDdbTable:
    Type: String
    Description: Key Store DynamoDB Table Name
    Default: KeyStoreDdbTable
  ProjectName:
    Type: String
    Description: A prefix that will be applied to any names
    # This must remain ESDK-Dafny, or several GHWs will break
    Default: ESDK-Dafny
  GitHubRepo:
    Type: String
    Description: GitHub Repo that invokes CI
    Default: aws/private-aws-encryption-sdk-dafny-staging

Resources:
  KeyStoreTestDdbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "branch-key-id"
          AttributeType: "S"
        - AttributeName: "type"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "branch-key-id"
          KeyType: "HASH"
        - AttributeName: "type"
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST
      TableName: !Ref KeyStoreDdbTable

  HierarchicalKeyringTestTableUsage:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "Allow Read, Write, and Delete of Items in KeyStoreDdbTable"
      ManagedPolicyName: !Sub "${ProjectName}-DDB-ReadWriteDelete-${AWS::Region}"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:CreateTable
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:GetItem
              - dynamodb:Query
              - dynamodb:ConditionCheckItem
              - dynamodb:UpdateItem
            Resource:
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${KeyStoreDdbTable}"
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${KeyStoreDdbTable}/index/*"

  DDBKeyStoreUserPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "Allow Read from KeyStore"
      ManagedPolicyName: !Sub "CryptographyExample-DDB-KeyStoreUser-${AWS::Region}"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
            Resource:
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${KeyStoreDdbTable}"
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${KeyStoreDdbTable}/index/*"

  DDBKeyStoreAdminPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "Allow Read from KeyStore, and only conditional writes to KeyStore"
      ManagedPolicyName: !Sub "CryptographyExample-DDB-KeyStoreUser-${AWS::Region}"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:ConditionCheckItem
              - dynamodb:GetItem
              - dynamodb:PutItem
            Resource:
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${KeyStoreDdbTable}"
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${KeyStoreDdbTable}/index/*"
            Condition:
              "ForAnyValue:StringEquals":
                "dynamodb:EnclosingOperation":
                  - TransactWriteItems
          - Effect: Allow
            Action:
              - dynamodb:GetItem
            Resource:
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${KeyStoreDdbTable}"
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${KeyStoreDdbTable}/index/*"

  HierarchicalGitHubKMSKeyID:
    Type: "AWS::KMS::Key"
    Properties:
      Description: KMS Key for GitHub Action Workflow
      Enabled: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"

  HierarchicalGitHubKMSKeyIDTwo:
    Type: "AWS::KMS::Key"
    Properties:
      Description: Another KMS Key for GitHub Action Workflow
      Enabled: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"

  KMSUsage:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "kms:Decrypt",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:ReEncrypt*",
                "kms:DescribeKey",
                "kms:CreateGrant",
                "kms:ListGrant",
                "kms:RevokeGrant"
              ],
              "Resource": [
                "arn:aws:kms:*:${AWS::AccountId}:key/${HierarchicalGitHubKMSKeyID}",
                "arn:aws:kms:*:${AWS::AccountId}:key/${HierarchicalGitHubKMSKeyIDTwo}"
              ]
            }
          ]
        }
      ManagedPolicyName: Hierarchical-GitHub-KMS-Key-Policy

  RSAGitHubKMSKeyID:
    Type: "AWS::KMS::Key"
    Properties:
      Description: KMS RSA Key for GitHub Action Workflow
      Enabled: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"
      KeySpec: "RSA_2048"
      KeyUsage: "ENCRYPT_DECRYPT"
      MultiRegion: true

  RSAKMSUsage:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:Generate*",
                "kms:GetPublicKey",
                "kms:DescribeKey"
              ],
              "Resource": "arn:aws:kms:*:${AWS::AccountId}:key/${RSAGitHubKMSKeyID}"
            }
          ]
        }
      ManagedPolicyName: RSA-GitHub-KMS-Key-Policy

  KeyStoreUserRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "CryptographyExample-KeyStoreUser-${AWS::Region}"
      Description: "Read Branch Keys."
      ManagedPolicyArns:
        - !Ref DDBKeyStoreUserPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub "arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com"
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "token.actions.githubusercontent.com:aud": "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub": !Sub "repo:${GitHubRepo}:*"
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/ToolsDevelopment"
            Action: "sts:AssumeRole"

  KeyStoreAdminRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "CryptographyExample-KeyStoreAdmin-${AWS::Region}"
      Description: "Read & Write Branch Keys."
      ManagedPolicyArns:
        - !Ref DDBKeyStoreAdminPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub "arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com"
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "token.actions.githubusercontent.com:aud": "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub": !Sub "repo:${GitHubRepo}:*"
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/ToolsDevelopment"
            Action: "sts:AssumeRole"

  # The MPL-Dafny Repo get access to everything here
  # via the CI.yaml#GitHubCIRole
  GitHubCIRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "GitHub-CI-${ProjectName}-Role-${AWS::Region}"
      Description: "Access DDB, KMS, Resources for CI from GitHub"
      ManagedPolicyArns:
        - "arn:aws:iam::370957321024:policy/PolymorphTestModels-KMS-us-west-2"
        - !Ref KMSUsage
        - !Ref RSAKMSUsage
        - "arn:aws:iam::370957321024:policy/PolymorphTestModels-DDB-ReadWriteDelete-us-west-2"
        - !Ref HierarchicalKeyringTestTableUsage
        - "arn:aws:iam::370957321024:policy/KMS-Public-CMK-EncryptDecrypt-Key-Access"
      AssumeRolePolicyDocument: !Sub |
        {
          "Version": "2012-10-17",   
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Federated": "arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com" },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "token.actions.githubusercontent.com:aud": "sts.amazonaws.com"
                },
                "StringLike": {
                  "token.actions.githubusercontent.com:sub": "repo:${GitHubRepo}:*"
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": { "AWS": "arn:aws:iam::${AWS::AccountId}:role/ToolsDevelopment" },
              "Action": "sts:AssumeRole"
            }
          ]
        }
