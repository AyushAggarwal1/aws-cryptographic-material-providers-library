# Code generated by smithy-python-codegen DO NOT EDIT.

import com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk
import com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk
from software_amazon_cryptography_services_dynamodb_internaldafny_types import (
    AttributeValue_B,
    AttributeValue_BOOL,
    AttributeValue_BS,
    AttributeValue_L,
    AttributeValue_M,
    AttributeValue_N,
    AttributeValue_NS,
    AttributeValue_NULL,
    AttributeValue_S,
    AttributeValue_SS,
)


def DafnyToAwsSdk_com_amazonaws_dynamodb_S3BucketSource(input):
    output = {}
    if input.S3BucketOwner.is_Some:
        output["S3BucketOwner"] = input.S3BucketOwner.value.VerbatimString(False)

    output["S3Bucket"] = input.S3Bucket.VerbatimString(False)
    if input.S3KeyPrefix.is_Some:
        output["S3KeyPrefix"] = input.S3KeyPrefix.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_InputFormatOptions(input):
    output = {}
    if input.Csv.is_Some:
        output["Csv"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_CsvOptions(input.Csv.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_CsvOptions(input):
    output = {}
    if input.Delimiter.is_Some:
        output["Delimiter"] = input.Delimiter.value.VerbatimString(False)

    if input.HeaderList.is_Some:
        output["HeaderList"] = [list_element.VerbatimString(False) for list_element in input.HeaderList.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TableCreationParameters(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["AttributeDefinitions"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeDefinition(list_element) for list_element in input.AttributeDefinitions]
    output["KeySchema"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema]
    if input.BillingMode.is_Some:
        output["BillingMode"] = input.BillingMode.value

    if input.ProvisionedThroughput.is_Some:
        output["ProvisionedThroughput"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.value)

    if input.SSESpecification.is_Some:
        output["SSESpecification"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_SSESpecification(input.SSESpecification.value)

    if input.GlobalSecondaryIndexes.is_Some:
        output["GlobalSecondaryIndexes"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexes.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeDefinition(input):
    output = {}
    output["AttributeName"] = input.AttributeName.VerbatimString(False)
    output["AttributeType"] = input.AttributeType
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_KeySchemaElement(input):
    output = {}
    output["AttributeName"] = input.AttributeName.VerbatimString(False)
    output["KeyType"] = input.KeyType
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughput(input):
    output = {}
    output["ReadCapacityUnits"] = input.ReadCapacityUnits
    output["WriteCapacityUnits"] = input.WriteCapacityUnits
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_SSESpecification(input):
    output = {}
    if input.Enabled.is_Some:
        output["Enabled"] = input.Enabled.value

    if input.SSEType.is_Some:
        output["SSEType"] = input.SSEType.value

    if input.KMSMasterKeyId.is_Some:
        output["KMSMasterKeyId"] = input.KMSMasterKeyId.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndex(input):
    output = {}
    output["IndexName"] = input.IndexName.VerbatimString(False)
    output["KeySchema"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema]
    output["Projection"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Projection(input.Projection)
    if input.ProvisionedThroughput.is_Some:
        output["ProvisionedThroughput"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_Projection(input):
    output = {}
    if input.ProjectionType.is_Some:
        output["ProjectionType"] = input.ProjectionType.value

    if input.NonKeyAttributes.is_Some:
        output["NonKeyAttributes"] = [list_element.VerbatimString(False) for list_element in input.NonKeyAttributes.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ImportTableInput(input):
    output = {}
    if input.ClientToken.is_Some:
        output["ClientToken"] = input.ClientToken.value.VerbatimString(False)

    output["S3BucketSource"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_S3BucketSource(input.S3BucketSource)
    output["InputFormat"] = input.InputFormat
    if input.InputFormatOptions.is_Some:
        output["InputFormatOptions"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_InputFormatOptions(input.InputFormatOptions.value)

    if input.InputCompressionType.is_Some:
        output["InputCompressionType"] = input.InputCompressionType.value

    output["TableCreationParameters"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableCreationParameters(input.TableCreationParameters)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListContributorInsightsInput(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    if input.MaxResults.is_Some:
        output["MaxResults"] = input.MaxResults.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_PointInTimeRecoverySpecification(input):
    output = {}
    output["PointInTimeRecoveryEnabled"] = input.PointInTimeRecoveryEnabled
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateContinuousBackupsInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["PointInTimeRecoverySpecification"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_PointInTimeRecoverySpecification(input.PointInTimeRecoverySpecification)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeEndpointsRequest(input):
    output = {}
    return output

def DafnyToAwsSdk_com_amazonaws_kms_EnableKeyRotationRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeGlobalTableInput(input):
    output = {}
    output["GlobalTableName"] = input.GlobalTableName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListTagsOfResourceInput(input):
    output = {}
    output["ResourceArn"] = input.ResourceArn.VerbatimString(False)
    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListImportsInput(input):
    output = {}
    if input.TableArn.is_Some:
        output["TableArn"] = input.TableArn.value.VerbatimString(False)

    if input.PageSize.is_Some:
        output["PageSize"] = input.PageSize.value

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_PutKeyPolicyRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["PolicyName"] = input.PolicyName.VerbatimString(False)
    output["Policy"] = input.Policy.VerbatimString(False)
    if input.BypassPolicyLockoutSafetyCheck.is_Some:
        output["BypassPolicyLockoutSafetyCheck"] = input.BypassPolicyLockoutSafetyCheck.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input):
    output = {}
    if input.MinimumUnits.is_Some:
        output["MinimumUnits"] = input.MinimumUnits.value

    if input.MaximumUnits.is_Some:
        output["MaximumUnits"] = input.MaximumUnits.value

    if input.AutoScalingDisabled.is_Some:
        output["AutoScalingDisabled"] = input.AutoScalingDisabled.value

    if input.AutoScalingRoleArn.is_Some:
        output["AutoScalingRoleArn"] = input.AutoScalingRoleArn.value.VerbatimString(False)

    if input.ScalingPolicyUpdate.is_Some:
        output["ScalingPolicyUpdate"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingPolicyUpdate(input.ScalingPolicyUpdate.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingPolicyUpdate(input):
    output = {}
    if input.PolicyName.is_Some:
        output["PolicyName"] = input.PolicyName.value.VerbatimString(False)

    output["TargetTrackingScalingPolicyConfiguration"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingTargetTrackingScalingPolicyConfigurationUpdate(input.TargetTrackingScalingPolicyConfiguration)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingTargetTrackingScalingPolicyConfigurationUpdate(input):
    output = {}
    if input.DisableScaleIn.is_Some:
        output["DisableScaleIn"] = input.DisableScaleIn.value

    if input.ScaleInCooldown.is_Some:
        output["ScaleInCooldown"] = input.ScaleInCooldown.value

    if input.ScaleOutCooldown.is_Some:
        output["ScaleOutCooldown"] = input.ScaleOutCooldown.value

    output["TargetValue"] = input.TargetValue
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalTableGlobalSecondaryIndexSettingsUpdate(input):
    output = {}
    output["IndexName"] = input.IndexName.VerbatimString(False)
    if input.ProvisionedWriteCapacityUnits.is_Some:
        output["ProvisionedWriteCapacityUnits"] = input.ProvisionedWriteCapacityUnits.value

    if input.ProvisionedWriteCapacityAutoScalingSettingsUpdate.is_Some:
        output["ProvisionedWriteCapacityAutoScalingSettingsUpdate"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ProvisionedWriteCapacityAutoScalingSettingsUpdate.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaSettingsUpdate(input):
    output = {}
    output["RegionName"] = input.RegionName.VerbatimString(False)
    if input.ReplicaProvisionedReadCapacityUnits.is_Some:
        output["ReplicaProvisionedReadCapacityUnits"] = input.ReplicaProvisionedReadCapacityUnits.value

    if input.ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate.is_Some:
        output["ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate.value)

    if input.ReplicaGlobalSecondaryIndexSettingsUpdate.is_Some:
        output["ReplicaGlobalSecondaryIndexSettingsUpdate"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexSettingsUpdate(list_element) for list_element in input.ReplicaGlobalSecondaryIndexSettingsUpdate.value]

    if input.ReplicaTableClass.is_Some:
        output["ReplicaTableClass"] = input.ReplicaTableClass.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexSettingsUpdate(input):
    output = {}
    output["IndexName"] = input.IndexName.VerbatimString(False)
    if input.ProvisionedReadCapacityUnits.is_Some:
        output["ProvisionedReadCapacityUnits"] = input.ProvisionedReadCapacityUnits.value

    if input.ProvisionedReadCapacityAutoScalingSettingsUpdate.is_Some:
        output["ProvisionedReadCapacityAutoScalingSettingsUpdate"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ProvisionedReadCapacityAutoScalingSettingsUpdate.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateGlobalTableSettingsInput(input):
    output = {}
    output["GlobalTableName"] = input.GlobalTableName.VerbatimString(False)
    if input.GlobalTableBillingMode.is_Some:
        output["GlobalTableBillingMode"] = input.GlobalTableBillingMode.value

    if input.GlobalTableProvisionedWriteCapacityUnits.is_Some:
        output["GlobalTableProvisionedWriteCapacityUnits"] = input.GlobalTableProvisionedWriteCapacityUnits.value

    if input.GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate.is_Some:
        output["GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate.value)

    if input.GlobalTableGlobalSecondaryIndexSettingsUpdate.is_Some:
        output["GlobalTableGlobalSecondaryIndexSettingsUpdate"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalTableGlobalSecondaryIndexSettingsUpdate(list_element) for list_element in input.GlobalTableGlobalSecondaryIndexSettingsUpdate.value]

    if input.ReplicaSettingsUpdate.is_Some:
        output["ReplicaSettingsUpdate"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaSettingsUpdate(list_element) for list_element in input.ReplicaSettingsUpdate.value]

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ListKeyPoliciesRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.Marker.is_Some:
        output["Marker"] = input.Marker.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_DescribeCustomKeyStoresRequest(input):
    output = {}
    if input.CustomKeyStoreId.is_Some:
        output["CustomKeyStoreId"] = input.CustomKeyStoreId.value.VerbatimString(False)

    if input.CustomKeyStoreName.is_Some:
        output["CustomKeyStoreName"] = input.CustomKeyStoreName.value.VerbatimString(False)

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.Marker.is_Some:
        output["Marker"] = input.Marker.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GrantConstraints(input):
    output = {}
    if input.EncryptionContextSubset.is_Some:
        output["EncryptionContextSubset"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.EncryptionContextSubset.value.items }

    if input.EncryptionContextEquals.is_Some:
        output["EncryptionContextEquals"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.EncryptionContextEquals.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_kms_CreateGrantRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["GranteePrincipal"] = input.GranteePrincipal.VerbatimString(False)
    if input.RetiringPrincipal.is_Some:
        output["RetiringPrincipal"] = input.RetiringPrincipal.value.VerbatimString(False)

    output["Operations"] = [list_element for list_element in input.Operations]
    if input.Constraints.is_Some:
        output["Constraints"] = com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_GrantConstraints(input.Constraints.value)

    if input.GrantTokens.is_Some:
        output["GrantTokens"] = [list_element.VerbatimString(False) for list_element in input.GrantTokens.value]

    if input.Name.is_Some:
        output["Name"] = input.Name.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ListGrantsRequest(input):
    output = {}
    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.Marker.is_Some:
        output["Marker"] = input.Marker.value.VerbatimString(False)

    output["KeyId"] = input.KeyId.VerbatimString(False)
    if input.GrantId.is_Some:
        output["GrantId"] = input.GrantId.value.VerbatimString(False)

    if input.GranteePrincipal.is_Some:
        output["GranteePrincipal"] = input.GranteePrincipal.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_SignRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["Message"] = bytes(input.Message)
    if input.MessageType.is_Some:
        output["MessageType"] = input.MessageType.value

    if input.GrantTokens.is_Some:
        output["GrantTokens"] = [list_element.VerbatimString(False) for list_element in input.GrantTokens.value]

    output["SigningAlgorithm"] = input.SigningAlgorithm
    return output

def DafnyToAwsSdk_com_amazonaws_kms_GetKeyPolicyRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["PolicyName"] = input.PolicyName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeImportInput(input):
    output = {}
    output["ImportArn"] = input.ImportArn.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_DisconnectCustomKeyStoreRequest(input):
    output = {}
    output["CustomKeyStoreId"] = input.CustomKeyStoreId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeKinesisStreamingDestinationInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_DisableKeyRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_Condition(input):
    output = {}
    if input.AttributeValueList.is_Some:
        output["AttributeValueList"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.AttributeValueList.value]

    output["ComparisonOperator"] = input.ComparisonOperator
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(input):
    # Convert AttributeValue
    if isinstance(input, AttributeValue_S):
        AttributeValue_union_value = {"S": input.S.VerbatimString(False)}
    elif isinstance(input, AttributeValue_N):
        AttributeValue_union_value = {"N": input.N.VerbatimString(False)}
    elif isinstance(input, AttributeValue_B):
        AttributeValue_union_value = {"B": bytes(input.B)}
    elif isinstance(input, AttributeValue_SS):
        AttributeValue_union_value = {"SS": [list_element.VerbatimString(False) for list_element in input.SS]}
    elif isinstance(input, AttributeValue_NS):
        AttributeValue_union_value = {"NS": [list_element.VerbatimString(False) for list_element in input.NS]}
    elif isinstance(input, AttributeValue_BS):
        AttributeValue_union_value = {"BS": [bytes(list_element) for list_element in input.BS]}
    elif isinstance(input, AttributeValue_M):
        AttributeValue_union_value = {"M": {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.M.items }}
    elif isinstance(input, AttributeValue_L):
        AttributeValue_union_value = {"L": [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.L]}
    elif isinstance(input, AttributeValue_NULL):
        AttributeValue_union_value = {"NULL": input.NULL}
    elif isinstance(input, AttributeValue_BOOL):
        AttributeValue_union_value = {"BOOL": input.BOOL}
    else:
        raise ValueError("No recognized union value in union type: " + input)

    return AttributeValue_union_value

def DafnyToAwsSdk_com_amazonaws_dynamodb_QueryInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.Select.is_Some:
        output["Select"] = input.Select.value

    if input.AttributesToGet.is_Some:
        output["AttributesToGet"] = [list_element.VerbatimString(False) for list_element in input.AttributesToGet.value]

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.ConsistentRead.is_Some:
        output["ConsistentRead"] = input.ConsistentRead.value

    if input.KeyConditions.is_Some:
        output["KeyConditions"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Condition(value) for (key, value) in input.KeyConditions.value.items }

    if input.QueryFilter.is_Some:
        output["QueryFilter"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Condition(value) for (key, value) in input.QueryFilter.value.items }

    if input.ConditionalOperator.is_Some:
        output["ConditionalOperator"] = input.ConditionalOperator.value

    if input.ScanIndexForward.is_Some:
        output["ScanIndexForward"] = input.ScanIndexForward.value

    if input.ExclusiveStartKey.is_Some:
        output["ExclusiveStartKey"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExclusiveStartKey.value.items }

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    if input.ProjectionExpression.is_Some:
        output["ProjectionExpression"] = input.ProjectionExpression.value.VerbatimString(False)

    if input.FilterExpression.is_Some:
        output["FilterExpression"] = input.FilterExpression.value.VerbatimString(False)

    if input.KeyConditionExpression.is_Some:
        output["KeyConditionExpression"] = input.KeyConditionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextRequest(input):
    output = {}
    if input.EncryptionContext.is_Some:
        output["EncryptionContext"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.EncryptionContext.value.items }

    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["KeyPairSpec"] = input.KeyPairSpec
    if input.GrantTokens.is_Some:
        output["GrantTokens"] = [list_element.VerbatimString(False) for list_element in input.GrantTokens.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_GetItemInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["Key"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
    if input.AttributesToGet.is_Some:
        output["AttributesToGet"] = [list_element.VerbatimString(False) for list_element in input.AttributesToGet.value]

    if input.ConsistentRead.is_Some:
        output["ConsistentRead"] = input.ConsistentRead.value

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    if input.ProjectionExpression.is_Some:
        output["ProjectionExpression"] = input.ProjectionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ListResourceTagsRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.Marker.is_Some:
        output["Marker"] = input.Marker.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_UntagResourceRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["TagKeys"] = [list_element.VerbatimString(False) for list_element in input.TagKeys]
    return output

def DafnyToAwsSdk_com_amazonaws_kms_Tag(input):
    output = {}
    output["TagKey"] = input.TagKey.VerbatimString(False)
    output["TagValue"] = input.TagValue.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_CreateKeyRequest(input):
    output = {}
    if input.Policy.is_Some:
        output["Policy"] = input.Policy.value.VerbatimString(False)

    if input.Description.is_Some:
        output["Description"] = input.Description.value.VerbatimString(False)

    if input.KeyUsage.is_Some:
        output["KeyUsage"] = input.KeyUsage.value

    if input.CustomerMasterKeySpec.is_Some:
        output["CustomerMasterKeySpec"] = input.CustomerMasterKeySpec.value

    if input.KeySpec.is_Some:
        output["KeySpec"] = input.KeySpec.value

    if input.Origin.is_Some:
        output["Origin"] = input.Origin.value

    if input.CustomKeyStoreId.is_Some:
        output["CustomKeyStoreId"] = input.CustomKeyStoreId.value.VerbatimString(False)

    if input.BypassPolicyLockoutSafetyCheck.is_Some:
        output["BypassPolicyLockoutSafetyCheck"] = input.BypassPolicyLockoutSafetyCheck.value

    if input.Tags.is_Some:
        output["Tags"] = [com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_Tag(list_element) for list_element in input.Tags.value]

    if input.MultiRegion.is_Some:
        output["MultiRegion"] = input.MultiRegion.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_DisableKeyRotationRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_CreateAliasRequest(input):
    output = {}
    output["AliasName"] = input.AliasName.VerbatimString(False)
    output["TargetKeyId"] = input.TargetKeyId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    if input.EncryptionContext.is_Some:
        output["EncryptionContext"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.EncryptionContext.value.items }

    if input.KeySpec.is_Some:
        output["KeySpec"] = input.KeySpec.value

    if input.NumberOfBytes.is_Some:
        output["NumberOfBytes"] = input.NumberOfBytes.value

    if input.GrantTokens.is_Some:
        output["GrantTokens"] = [list_element.VerbatimString(False) for list_element in input.GrantTokens.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeTableReplicaAutoScalingInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_LocalSecondaryIndex(input):
    output = {}
    output["IndexName"] = input.IndexName.VerbatimString(False)
    output["KeySchema"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema]
    output["Projection"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Projection(input.Projection)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_RestoreTableToPointInTimeInput(input):
    output = {}
    if input.SourceTableArn.is_Some:
        output["SourceTableArn"] = input.SourceTableArn.value.VerbatimString(False)

    if input.SourceTableName.is_Some:
        output["SourceTableName"] = input.SourceTableName.value.VerbatimString(False)

    output["TargetTableName"] = input.TargetTableName.VerbatimString(False)
    if input.UseLatestRestorableTime.is_Some:
        output["UseLatestRestorableTime"] = input.UseLatestRestorableTime.value

    if input.RestoreDateTime.is_Some:
        output["RestoreDateTime"] = TypeError("TimestampShape not supported")

    if input.BillingModeOverride.is_Some:
        output["BillingModeOverride"] = input.BillingModeOverride.value

    if input.GlobalSecondaryIndexOverride.is_Some:
        output["GlobalSecondaryIndexOverride"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexOverride.value]

    if input.LocalSecondaryIndexOverride.is_Some:
        output["LocalSecondaryIndexOverride"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_LocalSecondaryIndex(list_element) for list_element in input.LocalSecondaryIndexOverride.value]

    if input.ProvisionedThroughputOverride.is_Some:
        output["ProvisionedThroughputOverride"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughputOverride.value)

    if input.SSESpecificationOverride.is_Some:
        output["SSESpecificationOverride"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_SSESpecification(input.SSESpecificationOverride.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeLimitsInput(input):
    output = {}
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_EnableKinesisStreamingDestinationInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["StreamArn"] = input.StreamArn.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ParameterizedStatement(input):
    output = {}
    output["Statement"] = input.Statement.VerbatimString(False)
    if input.Parameters.is_Some:
        output["Parameters"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.Parameters.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ExecuteTransactionInput(input):
    output = {}
    output["TransactStatements"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ParameterizedStatement(list_element) for list_element in input.TransactStatements]
    if input.ClientRequestToken.is_Some:
        output["ClientRequestToken"] = input.ClientRequestToken.value.VerbatimString(False)

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ReplicateKeyRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["ReplicaRegion"] = input.ReplicaRegion.VerbatimString(False)
    if input.Policy.is_Some:
        output["Policy"] = input.Policy.value.VerbatimString(False)

    if input.BypassPolicyLockoutSafetyCheck.is_Some:
        output["BypassPolicyLockoutSafetyCheck"] = input.BypassPolicyLockoutSafetyCheck.value

    if input.Description.is_Some:
        output["Description"] = input.Description.value.VerbatimString(False)

    if input.Tags.is_Some:
        output["Tags"] = [com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_Tag(list_element) for list_element in input.Tags.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeContributorInsightsInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ConnectCustomKeyStoreRequest(input):
    output = {}
    output["CustomKeyStoreId"] = input.CustomKeyStoreId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_WriteRequest(input):
    output = {}
    if input.PutRequest.is_Some:
        output["PutRequest"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_PutRequest(input.PutRequest.value)

    if input.DeleteRequest.is_Some:
        output["DeleteRequest"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteRequest(input.DeleteRequest.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_PutRequest(input):
    output = {}
    output["Item"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.items }
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteRequest(input):
    output = {}
    output["Key"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BatchWriteItemInput(input):
    output = {}
    output["RequestItems"] = {key.VerbatimString(False): [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_WriteRequest(list_element) for list_element in value] for (key, value) in input.RequestItems.items }
    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    if input.ReturnItemCollectionMetrics.is_Some:
        output["ReturnItemCollectionMetrics"] = input.ReturnItemCollectionMetrics.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BatchStatementRequest(input):
    output = {}
    output["Statement"] = input.Statement.VerbatimString(False)
    if input.Parameters.is_Some:
        output["Parameters"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.Parameters.value]

    if input.ConsistentRead.is_Some:
        output["ConsistentRead"] = input.ConsistentRead.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BatchExecuteStatementInput(input):
    output = {}
    output["Statements"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_BatchStatementRequest(list_element) for list_element in input.Statements]
    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListExportsInput(input):
    output = {}
    if input.TableArn.is_Some:
        output["TableArn"] = input.TableArn.value.VerbatimString(False)

    if input.MaxResults.is_Some:
        output["MaxResults"] = input.MaxResults.value

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GetPublicKeyRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    if input.GrantTokens.is_Some:
        output["GrantTokens"] = [list_element.VerbatimString(False) for list_element in input.GrantTokens.value]

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GenerateDataKeyRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    if input.EncryptionContext.is_Some:
        output["EncryptionContext"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.EncryptionContext.value.items }

    if input.NumberOfBytes.is_Some:
        output["NumberOfBytes"] = input.NumberOfBytes.value

    if input.KeySpec.is_Some:
        output["KeySpec"] = input.KeySpec.value

    if input.GrantTokens.is_Some:
        output["GrantTokens"] = [list_element.VerbatimString(False) for list_element in input.GrantTokens.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListTablesInput(input):
    output = {}
    if input.ExclusiveStartTableName.is_Some:
        output["ExclusiveStartTableName"] = input.ExclusiveStartTableName.value.VerbatimString(False)

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_DeleteCustomKeyStoreRequest(input):
    output = {}
    output["CustomKeyStoreId"] = input.CustomKeyStoreId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_RestoreTableFromBackupInput(input):
    output = {}
    output["TargetTableName"] = input.TargetTableName.VerbatimString(False)
    output["BackupArn"] = input.BackupArn.VerbatimString(False)
    if input.BillingModeOverride.is_Some:
        output["BillingModeOverride"] = input.BillingModeOverride.value

    if input.GlobalSecondaryIndexOverride.is_Some:
        output["GlobalSecondaryIndexOverride"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexOverride.value]

    if input.LocalSecondaryIndexOverride.is_Some:
        output["LocalSecondaryIndexOverride"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_LocalSecondaryIndex(list_element) for list_element in input.LocalSecondaryIndexOverride.value]

    if input.ProvisionedThroughputOverride.is_Some:
        output["ProvisionedThroughputOverride"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughputOverride.value)

    if input.SSESpecificationOverride.is_Some:
        output["SSESpecificationOverride"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_SSESpecification(input.SSESpecificationOverride.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ReEncryptRequest(input):
    output = {}
    output["CiphertextBlob"] = bytes(input.CiphertextBlob)
    if input.SourceEncryptionContext.is_Some:
        output["SourceEncryptionContext"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.SourceEncryptionContext.value.items }

    if input.SourceKeyId.is_Some:
        output["SourceKeyId"] = input.SourceKeyId.value.VerbatimString(False)

    output["DestinationKeyId"] = input.DestinationKeyId.VerbatimString(False)
    if input.DestinationEncryptionContext.is_Some:
        output["DestinationEncryptionContext"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.DestinationEncryptionContext.value.items }

    if input.SourceEncryptionAlgorithm.is_Some:
        output["SourceEncryptionAlgorithm"] = input.SourceEncryptionAlgorithm.value

    if input.DestinationEncryptionAlgorithm.is_Some:
        output["DestinationEncryptionAlgorithm"] = input.DestinationEncryptionAlgorithm.value

    if input.GrantTokens.is_Some:
        output["GrantTokens"] = [list_element.VerbatimString(False) for list_element in input.GrantTokens.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TransactGetItem(input):
    output = {}
    output["Get"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Get(input.Get)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_Get(input):
    output = {}
    output["Key"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
    output["TableName"] = input.TableName.VerbatimString(False)
    if input.ProjectionExpression.is_Some:
        output["ProjectionExpression"] = input.ProjectionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TransactGetItemsInput(input):
    output = {}
    output["TransactItems"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TransactGetItem(list_element) for list_element in input.TransactItems]
    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_DeleteAliasRequest(input):
    output = {}
    output["AliasName"] = input.AliasName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeTimeToLiveInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_Tag(input):
    output = {}
    output["Key"] = input.Key.VerbatimString(False)
    output["Value"] = input.Value.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TagResourceInput(input):
    output = {}
    output["ResourceArn"] = input.ResourceArn.VerbatimString(False)
    output["Tags"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Tag(list_element) for list_element in input.Tags]
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TimeToLiveSpecification(input):
    output = {}
    output["Enabled"] = input.Enabled
    output["AttributeName"] = input.AttributeName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateTimeToLiveInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["TimeToLiveSpecification"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TimeToLiveSpecification(input.TimeToLiveSpecification)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_RetireGrantRequest(input):
    output = {}
    if input.GrantToken.is_Some:
        output["GrantToken"] = input.GrantToken.value.VerbatimString(False)

    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.GrantId.is_Some:
        output["GrantId"] = input.GrantId.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UntagResourceInput(input):
    output = {}
    output["ResourceArn"] = input.ResourceArn.VerbatimString(False)
    output["TagKeys"] = [list_element.VerbatimString(False) for list_element in input.TagKeys]
    return output

def DafnyToAwsSdk_com_amazonaws_kms_GetParametersForImportRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["WrappingAlgorithm"] = input.WrappingAlgorithm
    output["WrappingKeySpec"] = input.WrappingKeySpec
    return output

def DafnyToAwsSdk_com_amazonaws_kms_UpdateCustomKeyStoreRequest(input):
    output = {}
    output["CustomKeyStoreId"] = input.CustomKeyStoreId.VerbatimString(False)
    if input.NewCustomKeyStoreName.is_Some:
        output["NewCustomKeyStoreName"] = input.NewCustomKeyStoreName.value.VerbatimString(False)

    if input.KeyStorePassword.is_Some:
        output["KeyStorePassword"] = input.KeyStorePassword.value.VerbatimString(False)

    if input.CloudHsmClusterId.is_Some:
        output["CloudHsmClusterId"] = input.CloudHsmClusterId.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteTableInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TransactWriteItem(input):
    output = {}
    if input.ConditionCheck.is_Some:
        output["ConditionCheck"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConditionCheck(input.ConditionCheck.value)

    if input.Put.is_Some:
        output["Put"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Put(input.Put.value)

    if input.Delete.is_Some:
        output["Delete"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Delete(input.Delete.value)

    if input.Update.is_Some:
        output["Update"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Update(input.Update.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ConditionCheck(input):
    output = {}
    output["Key"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
    output["TableName"] = input.TableName.VerbatimString(False)
    output["ConditionExpression"] = input.ConditionExpression.VerbatimString(False)
    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    if input.ReturnValuesOnConditionCheckFailure.is_Some:
        output["ReturnValuesOnConditionCheckFailure"] = input.ReturnValuesOnConditionCheckFailure.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_Put(input):
    output = {}
    output["Item"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.items }
    output["TableName"] = input.TableName.VerbatimString(False)
    if input.ConditionExpression.is_Some:
        output["ConditionExpression"] = input.ConditionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    if input.ReturnValuesOnConditionCheckFailure.is_Some:
        output["ReturnValuesOnConditionCheckFailure"] = input.ReturnValuesOnConditionCheckFailure.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_Delete(input):
    output = {}
    output["Key"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
    output["TableName"] = input.TableName.VerbatimString(False)
    if input.ConditionExpression.is_Some:
        output["ConditionExpression"] = input.ConditionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    if input.ReturnValuesOnConditionCheckFailure.is_Some:
        output["ReturnValuesOnConditionCheckFailure"] = input.ReturnValuesOnConditionCheckFailure.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_Update(input):
    output = {}
    output["Key"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
    output["UpdateExpression"] = input.UpdateExpression.VerbatimString(False)
    output["TableName"] = input.TableName.VerbatimString(False)
    if input.ConditionExpression.is_Some:
        output["ConditionExpression"] = input.ConditionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    if input.ReturnValuesOnConditionCheckFailure.is_Some:
        output["ReturnValuesOnConditionCheckFailure"] = input.ReturnValuesOnConditionCheckFailure.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TransactWriteItemsInput(input):
    output = {}
    output["TransactItems"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TransactWriteItem(list_element) for list_element in input.TransactItems]
    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    if input.ReturnItemCollectionMetrics.is_Some:
        output["ReturnItemCollectionMetrics"] = input.ReturnItemCollectionMetrics.value

    if input.ClientRequestToken.is_Some:
        output["ClientRequestToken"] = input.ClientRequestToken.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_Replica(input):
    output = {}
    if input.RegionName.is_Some:
        output["RegionName"] = input.RegionName.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_CreateGlobalTableInput(input):
    output = {}
    output["GlobalTableName"] = input.GlobalTableName.VerbatimString(False)
    output["ReplicationGroup"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Replica(list_element) for list_element in input.ReplicationGroup]
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_CreateBackupInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["BackupName"] = input.BackupName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeGlobalTableSettingsInput(input):
    output = {}
    output["GlobalTableName"] = input.GlobalTableName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeContinuousBackupsInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_DescribeKeyRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    if input.GrantTokens.is_Some:
        output["GrantTokens"] = [list_element.VerbatimString(False) for list_element in input.GrantTokens.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndexUpdate(input):
    output = {}
    if input.Update.is_Some:
        output["Update"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateGlobalSecondaryIndexAction(input.Update.value)

    if input.Create.is_Some:
        output["Create"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_CreateGlobalSecondaryIndexAction(input.Create.value)

    if input.Delete.is_Some:
        output["Delete"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteGlobalSecondaryIndexAction(input.Delete.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateGlobalSecondaryIndexAction(input):
    output = {}
    output["IndexName"] = input.IndexName.VerbatimString(False)
    output["ProvisionedThroughput"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_CreateGlobalSecondaryIndexAction(input):
    output = {}
    output["IndexName"] = input.IndexName.VerbatimString(False)
    output["KeySchema"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema]
    output["Projection"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Projection(input.Projection)
    if input.ProvisionedThroughput.is_Some:
        output["ProvisionedThroughput"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteGlobalSecondaryIndexAction(input):
    output = {}
    output["IndexName"] = input.IndexName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_StreamSpecification(input):
    output = {}
    output["StreamEnabled"] = input.StreamEnabled
    if input.StreamViewType.is_Some:
        output["StreamViewType"] = input.StreamViewType.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicationGroupUpdate(input):
    output = {}
    if input.Create.is_Some:
        output["Create"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_CreateReplicationGroupMemberAction(input.Create.value)

    if input.Update.is_Some:
        output["Update"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateReplicationGroupMemberAction(input.Update.value)

    if input.Delete.is_Some:
        output["Delete"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteReplicationGroupMemberAction(input.Delete.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_CreateReplicationGroupMemberAction(input):
    output = {}
    output["RegionName"] = input.RegionName.VerbatimString(False)
    if input.KMSMasterKeyId.is_Some:
        output["KMSMasterKeyId"] = input.KMSMasterKeyId.value.VerbatimString(False)

    if input.ProvisionedThroughputOverride.is_Some:
        output["ProvisionedThroughputOverride"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.ProvisionedThroughputOverride.value)

    if input.GlobalSecondaryIndexes.is_Some:
        output["GlobalSecondaryIndexes"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexes.value]

    if input.TableClassOverride.is_Some:
        output["TableClassOverride"] = input.TableClassOverride.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateReplicationGroupMemberAction(input):
    output = {}
    output["RegionName"] = input.RegionName.VerbatimString(False)
    if input.KMSMasterKeyId.is_Some:
        output["KMSMasterKeyId"] = input.KMSMasterKeyId.value.VerbatimString(False)

    if input.ProvisionedThroughputOverride.is_Some:
        output["ProvisionedThroughputOverride"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.ProvisionedThroughputOverride.value)

    if input.GlobalSecondaryIndexes.is_Some:
        output["GlobalSecondaryIndexes"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexes.value]

    if input.TableClassOverride.is_Some:
        output["TableClassOverride"] = input.TableClassOverride.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteReplicationGroupMemberAction(input):
    output = {}
    output["RegionName"] = input.RegionName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input):
    output = {}
    if input.ReadCapacityUnits.is_Some:
        output["ReadCapacityUnits"] = input.ReadCapacityUnits.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndex(input):
    output = {}
    output["IndexName"] = input.IndexName.VerbatimString(False)
    if input.ProvisionedThroughputOverride.is_Some:
        output["ProvisionedThroughputOverride"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.ProvisionedThroughputOverride.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateTableInput(input):
    output = {}
    if input.AttributeDefinitions.is_Some:
        output["AttributeDefinitions"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeDefinition(list_element) for list_element in input.AttributeDefinitions.value]

    output["TableName"] = input.TableName.VerbatimString(False)
    if input.BillingMode.is_Some:
        output["BillingMode"] = input.BillingMode.value

    if input.ProvisionedThroughput.is_Some:
        output["ProvisionedThroughput"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.value)

    if input.GlobalSecondaryIndexUpdates.is_Some:
        output["GlobalSecondaryIndexUpdates"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndexUpdate(list_element) for list_element in input.GlobalSecondaryIndexUpdates.value]

    if input.StreamSpecification.is_Some:
        output["StreamSpecification"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_StreamSpecification(input.StreamSpecification.value)

    if input.SSESpecification.is_Some:
        output["SSESpecification"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_SSESpecification(input.SSESpecification.value)

    if input.ReplicaUpdates.is_Some:
        output["ReplicaUpdates"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicationGroupUpdate(list_element) for list_element in input.ReplicaUpdates.value]

    if input.TableClass.is_Some:
        output["TableClass"] = input.TableClass.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GenerateDataKeyPairRequest(input):
    output = {}
    if input.EncryptionContext.is_Some:
        output["EncryptionContext"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.EncryptionContext.value.items }

    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["KeyPairSpec"] = input.KeyPairSpec
    if input.GrantTokens.is_Some:
        output["GrantTokens"] = [list_element.VerbatimString(False) for list_element in input.GrantTokens.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeTableInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_GenerateRandomRequest(input):
    output = {}
    if input.NumberOfBytes.is_Some:
        output["NumberOfBytes"] = input.NumberOfBytes.value

    if input.CustomKeyStoreId.is_Some:
        output["CustomKeyStoreId"] = input.CustomKeyStoreId.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ExportTableToPointInTimeInput(input):
    output = {}
    output["TableArn"] = input.TableArn.VerbatimString(False)
    if input.ExportTime.is_Some:
        output["ExportTime"] = TypeError("TimestampShape not supported")

    if input.ClientToken.is_Some:
        output["ClientToken"] = input.ClientToken.value.VerbatimString(False)

    output["S3Bucket"] = input.S3Bucket.VerbatimString(False)
    if input.S3BucketOwner.is_Some:
        output["S3BucketOwner"] = input.S3BucketOwner.value.VerbatimString(False)

    if input.S3Prefix.is_Some:
        output["S3Prefix"] = input.S3Prefix.value.VerbatimString(False)

    if input.S3SseAlgorithm.is_Some:
        output["S3SseAlgorithm"] = input.S3SseAlgorithm.value

    if input.S3SseKmsKeyId.is_Some:
        output["S3SseKmsKeyId"] = input.S3SseKmsKeyId.value.VerbatimString(False)

    if input.ExportFormat.is_Some:
        output["ExportFormat"] = input.ExportFormat.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_RevokeGrantRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["GrantId"] = input.GrantId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteBackupInput(input):
    output = {}
    output["BackupArn"] = input.BackupArn.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_EncryptRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["Plaintext"] = bytes(input.Plaintext)
    if input.EncryptionContext.is_Some:
        output["EncryptionContext"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.EncryptionContext.value.items }

    if input.GrantTokens.is_Some:
        output["GrantTokens"] = [list_element.VerbatimString(False) for list_element in input.GrantTokens.value]

    if input.EncryptionAlgorithm.is_Some:
        output["EncryptionAlgorithm"] = input.EncryptionAlgorithm.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ExecuteStatementInput(input):
    output = {}
    output["Statement"] = input.Statement.VerbatimString(False)
    if input.Parameters.is_Some:
        output["Parameters"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.Parameters.value]

    if input.ConsistentRead.is_Some:
        output["ConsistentRead"] = input.ConsistentRead.value

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_CancelKeyDeletionRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_KeysAndAttributes(input):
    output = {}
    output["Keys"] = [{key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in list_element.items } for list_element in input.Keys]
    if input.AttributesToGet.is_Some:
        output["AttributesToGet"] = [list_element.VerbatimString(False) for list_element in input.AttributesToGet.value]

    if input.ConsistentRead.is_Some:
        output["ConsistentRead"] = input.ConsistentRead.value

    if input.ProjectionExpression.is_Some:
        output["ProjectionExpression"] = input.ProjectionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BatchGetItemInput(input):
    output = {}
    output["RequestItems"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeysAndAttributes(value) for (key, value) in input.RequestItems.items }
    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ExpectedAttributeValue(input):
    output = {}
    if input.Value.is_Some:
        output["Value"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(input.Value.value)

    if input.Exists.is_Some:
        output["Exists"] = input.Exists.value

    if input.ComparisonOperator.is_Some:
        output["ComparisonOperator"] = input.ComparisonOperator.value

    if input.AttributeValueList.is_Some:
        output["AttributeValueList"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.AttributeValueList.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_PutItemInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["Item"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.items }
    if input.Expected.is_Some:
        output["Expected"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ExpectedAttributeValue(value) for (key, value) in input.Expected.value.items }

    if input.ReturnValues.is_Some:
        output["ReturnValues"] = input.ReturnValues.value

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    if input.ReturnItemCollectionMetrics.is_Some:
        output["ReturnItemCollectionMetrics"] = input.ReturnItemCollectionMetrics.value

    if input.ConditionalOperator.is_Some:
        output["ConditionalOperator"] = input.ConditionalOperator.value

    if input.ConditionExpression.is_Some:
        output["ConditionExpression"] = input.ConditionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_kms_TagResourceRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["Tags"] = [com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_Tag(list_element) for list_element in input.Tags]
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_CreateTableInput(input):
    output = {}
    output["AttributeDefinitions"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeDefinition(list_element) for list_element in input.AttributeDefinitions]
    output["TableName"] = input.TableName.VerbatimString(False)
    output["KeySchema"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema]
    if input.LocalSecondaryIndexes.is_Some:
        output["LocalSecondaryIndexes"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_LocalSecondaryIndex(list_element) for list_element in input.LocalSecondaryIndexes.value]

    if input.GlobalSecondaryIndexes.is_Some:
        output["GlobalSecondaryIndexes"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexes.value]

    if input.BillingMode.is_Some:
        output["BillingMode"] = input.BillingMode.value

    if input.ProvisionedThroughput.is_Some:
        output["ProvisionedThroughput"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.value)

    if input.StreamSpecification.is_Some:
        output["StreamSpecification"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_StreamSpecification(input.StreamSpecification.value)

    if input.SSESpecification.is_Some:
        output["SSESpecification"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_SSESpecification(input.SSESpecification.value)

    if input.Tags.is_Some:
        output["Tags"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Tag(list_element) for list_element in input.Tags.value]

    if input.TableClass.is_Some:
        output["TableClass"] = input.TableClass.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_UpdatePrimaryRegionRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["PrimaryRegion"] = input.PrimaryRegion.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DisableKinesisStreamingDestinationInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["StreamArn"] = input.StreamArn.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_ScheduleKeyDeletionRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    if input.PendingWindowInDays.is_Some:
        output["PendingWindowInDays"] = input.PendingWindowInDays.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ListAliasesRequest(input):
    output = {}
    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.Marker.is_Some:
        output["Marker"] = input.Marker.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GetKeyRotationStatusRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndexAutoScalingUpdate(input):
    output = {}
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.ProvisionedWriteCapacityAutoScalingUpdate.is_Some:
        output["ProvisionedWriteCapacityAutoScalingUpdate"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ProvisionedWriteCapacityAutoScalingUpdate.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaAutoScalingUpdate(input):
    output = {}
    output["RegionName"] = input.RegionName.VerbatimString(False)
    if input.ReplicaGlobalSecondaryIndexUpdates.is_Some:
        output["ReplicaGlobalSecondaryIndexUpdates"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexAutoScalingUpdate(list_element) for list_element in input.ReplicaGlobalSecondaryIndexUpdates.value]

    if input.ReplicaProvisionedReadCapacityAutoScalingUpdate.is_Some:
        output["ReplicaProvisionedReadCapacityAutoScalingUpdate"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ReplicaProvisionedReadCapacityAutoScalingUpdate.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexAutoScalingUpdate(input):
    output = {}
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.ProvisionedReadCapacityAutoScalingUpdate.is_Some:
        output["ProvisionedReadCapacityAutoScalingUpdate"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ProvisionedReadCapacityAutoScalingUpdate.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateTableReplicaAutoScalingInput(input):
    output = {}
    if input.GlobalSecondaryIndexUpdates.is_Some:
        output["GlobalSecondaryIndexUpdates"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndexAutoScalingUpdate(list_element) for list_element in input.GlobalSecondaryIndexUpdates.value]

    output["TableName"] = input.TableName.VerbatimString(False)
    if input.ProvisionedWriteCapacityAutoScalingUpdate.is_Some:
        output["ProvisionedWriteCapacityAutoScalingUpdate"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ProvisionedWriteCapacityAutoScalingUpdate.value)

    if input.ReplicaUpdates.is_Some:
        output["ReplicaUpdates"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaAutoScalingUpdate(list_element) for list_element in input.ReplicaUpdates.value]

    return output

def DafnyToAwsSdk_com_amazonaws_kms_CreateCustomKeyStoreRequest(input):
    output = {}
    output["CustomKeyStoreName"] = input.CustomKeyStoreName.VerbatimString(False)
    output["CloudHsmClusterId"] = input.CloudHsmClusterId.VerbatimString(False)
    output["TrustAnchorCertificate"] = input.TrustAnchorCertificate.VerbatimString(False)
    output["KeyStorePassword"] = input.KeyStorePassword.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValueUpdate(input):
    output = {}
    if input.Value.is_Some:
        output["Value"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(input.Value.value)

    if input.Action.is_Some:
        output["Action"] = input.Action.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateItemInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["Key"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
    if input.AttributeUpdates.is_Some:
        output["AttributeUpdates"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValueUpdate(value) for (key, value) in input.AttributeUpdates.value.items }

    if input.Expected.is_Some:
        output["Expected"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ExpectedAttributeValue(value) for (key, value) in input.Expected.value.items }

    if input.ConditionalOperator.is_Some:
        output["ConditionalOperator"] = input.ConditionalOperator.value

    if input.ReturnValues.is_Some:
        output["ReturnValues"] = input.ReturnValues.value

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    if input.ReturnItemCollectionMetrics.is_Some:
        output["ReturnItemCollectionMetrics"] = input.ReturnItemCollectionMetrics.value

    if input.UpdateExpression.is_Some:
        output["UpdateExpression"] = input.UpdateExpression.value.VerbatimString(False)

    if input.ConditionExpression.is_Some:
        output["ConditionExpression"] = input.ConditionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ScanInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.AttributesToGet.is_Some:
        output["AttributesToGet"] = [list_element.VerbatimString(False) for list_element in input.AttributesToGet.value]

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.Select.is_Some:
        output["Select"] = input.Select.value

    if input.ScanFilter.is_Some:
        output["ScanFilter"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Condition(value) for (key, value) in input.ScanFilter.value.items }

    if input.ConditionalOperator.is_Some:
        output["ConditionalOperator"] = input.ConditionalOperator.value

    if input.ExclusiveStartKey.is_Some:
        output["ExclusiveStartKey"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExclusiveStartKey.value.items }

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    if input.TotalSegments.is_Some:
        output["TotalSegments"] = input.TotalSegments.value

    if input.Segment.is_Some:
        output["Segment"] = input.Segment.value

    if input.ProjectionExpression.is_Some:
        output["ProjectionExpression"] = input.ProjectionExpression.value.VerbatimString(False)

    if input.FilterExpression.is_Some:
        output["FilterExpression"] = input.FilterExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    if input.ConsistentRead.is_Some:
        output["ConsistentRead"] = input.ConsistentRead.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_UpdateKeyDescriptionRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["Description"] = input.Description.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeExportInput(input):
    output = {}
    output["ExportArn"] = input.ExportArn.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateContributorInsightsInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    output["ContributorInsightsAction"] = input.ContributorInsightsAction
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListBackupsInput(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.TimeRangeLowerBound.is_Some:
        output["TimeRangeLowerBound"] = TypeError("TimestampShape not supported")

    if input.TimeRangeUpperBound.is_Some:
        output["TimeRangeUpperBound"] = TypeError("TimestampShape not supported")

    if input.ExclusiveStartBackupArn.is_Some:
        output["ExclusiveStartBackupArn"] = input.ExclusiveStartBackupArn.value.VerbatimString(False)

    if input.BackupType.is_Some:
        output["BackupType"] = input.BackupType.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_UpdateAliasRequest(input):
    output = {}
    output["AliasName"] = input.AliasName.VerbatimString(False)
    output["TargetKeyId"] = input.TargetKeyId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaUpdate(input):
    output = {}
    if input.Create.is_Some:
        output["Create"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_CreateReplicaAction(input.Create.value)

    if input.Delete.is_Some:
        output["Delete"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteReplicaAction(input.Delete.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_CreateReplicaAction(input):
    output = {}
    output["RegionName"] = input.RegionName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteReplicaAction(input):
    output = {}
    output["RegionName"] = input.RegionName.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateGlobalTableInput(input):
    output = {}
    output["GlobalTableName"] = input.GlobalTableName.VerbatimString(False)
    output["ReplicaUpdates"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaUpdate(list_element) for list_element in input.ReplicaUpdates]
    return output

def DafnyToAwsSdk_com_amazonaws_kms_ImportKeyMaterialRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["ImportToken"] = bytes(input.ImportToken)
    output["EncryptedKeyMaterial"] = bytes(input.EncryptedKeyMaterial)
    if input.ValidTo.is_Some:
        output["ValidTo"] = TypeError("TimestampShape not supported")

    if input.ExpirationModel.is_Some:
        output["ExpirationModel"] = input.ExpirationModel.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeBackupInput(input):
    output = {}
    output["BackupArn"] = input.BackupArn.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_EnableKeyRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteItemInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["Key"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
    if input.Expected.is_Some:
        output["Expected"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ExpectedAttributeValue(value) for (key, value) in input.Expected.value.items }

    if input.ConditionalOperator.is_Some:
        output["ConditionalOperator"] = input.ConditionalOperator.value

    if input.ReturnValues.is_Some:
        output["ReturnValues"] = input.ReturnValues.value

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value

    if input.ReturnItemCollectionMetrics.is_Some:
        output["ReturnItemCollectionMetrics"] = input.ReturnItemCollectionMetrics.value

    if input.ConditionExpression.is_Some:
        output["ConditionExpression"] = input.ConditionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListGlobalTablesInput(input):
    output = {}
    if input.ExclusiveStartGlobalTableName.is_Some:
        output["ExclusiveStartGlobalTableName"] = input.ExclusiveStartGlobalTableName.value.VerbatimString(False)

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.RegionName.is_Some:
        output["RegionName"] = input.RegionName.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_DeleteImportedKeyMaterialRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_VerifyRequest(input):
    output = {}
    output["KeyId"] = input.KeyId.VerbatimString(False)
    output["Message"] = bytes(input.Message)
    if input.MessageType.is_Some:
        output["MessageType"] = input.MessageType.value

    output["Signature"] = bytes(input.Signature)
    output["SigningAlgorithm"] = input.SigningAlgorithm
    if input.GrantTokens.is_Some:
        output["GrantTokens"] = [list_element.VerbatimString(False) for list_element in input.GrantTokens.value]

    return output

def DafnyToAwsSdk_com_amazonaws_kms_DecryptRequest(input):
    output = {}
    output["CiphertextBlob"] = bytes(input.CiphertextBlob)
    if input.EncryptionContext.is_Some:
        output["EncryptionContext"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.EncryptionContext.value.items }

    if input.GrantTokens.is_Some:
        output["GrantTokens"] = [list_element.VerbatimString(False) for list_element in input.GrantTokens.value]

    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.EncryptionAlgorithm.is_Some:
        output["EncryptionAlgorithm"] = input.EncryptionAlgorithm.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ImportTableDescription(input):
    output = {}
    if input.ImportArn.is_Some:
        output["ImportArn"] = input.ImportArn.value.VerbatimString(False)

    if input.ImportStatus.is_Some:
        output["ImportStatus"] = input.ImportStatus.value

    if input.TableArn.is_Some:
        output["TableArn"] = input.TableArn.value.VerbatimString(False)

    if input.TableId.is_Some:
        output["TableId"] = input.TableId.value.VerbatimString(False)

    if input.ClientToken.is_Some:
        output["ClientToken"] = input.ClientToken.value.VerbatimString(False)

    if input.S3BucketSource.is_Some:
        output["S3BucketSource"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_S3BucketSource(input.S3BucketSource.value)

    if input.ErrorCount.is_Some:
        output["ErrorCount"] = input.ErrorCount.value

    if input.CloudWatchLogGroupArn.is_Some:
        output["CloudWatchLogGroupArn"] = input.CloudWatchLogGroupArn.value.VerbatimString(False)

    if input.InputFormat.is_Some:
        output["InputFormat"] = input.InputFormat.value

    if input.InputFormatOptions.is_Some:
        output["InputFormatOptions"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_InputFormatOptions(input.InputFormatOptions.value)

    if input.InputCompressionType.is_Some:
        output["InputCompressionType"] = input.InputCompressionType.value

    if input.TableCreationParameters.is_Some:
        output["TableCreationParameters"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableCreationParameters(input.TableCreationParameters.value)

    if input.StartTime.is_Some:
        output["StartTime"] = TypeError("TimestampShape not supported")

    if input.EndTime.is_Some:
        output["EndTime"] = TypeError("TimestampShape not supported")

    if input.ProcessedSizeBytes.is_Some:
        output["ProcessedSizeBytes"] = input.ProcessedSizeBytes.value

    if input.ProcessedItemCount.is_Some:
        output["ProcessedItemCount"] = input.ProcessedItemCount.value

    if input.ImportedItemCount.is_Some:
        output["ImportedItemCount"] = input.ImportedItemCount.value

    if input.FailureCode.is_Some:
        output["FailureCode"] = input.FailureCode.value.VerbatimString(False)

    if input.FailureMessage.is_Some:
        output["FailureMessage"] = input.FailureMessage.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ImportTableOutput(input):
    output = {}
    output["ImportTableDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ImportTableDescription(input.ImportTableDescription)
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ContributorInsightsSummary(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.ContributorInsightsStatus.is_Some:
        output["ContributorInsightsStatus"] = input.ContributorInsightsStatus.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListContributorInsightsOutput(input):
    output = {}
    if input.ContributorInsightsSummaries.is_Some:
        output["ContributorInsightsSummaries"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ContributorInsightsSummary(list_element) for list_element in input.ContributorInsightsSummaries.value]

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ContinuousBackupsDescription(input):
    output = {}
    output["ContinuousBackupsStatus"] = input.ContinuousBackupsStatus
    if input.PointInTimeRecoveryDescription.is_Some:
        output["PointInTimeRecoveryDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_PointInTimeRecoveryDescription(input.PointInTimeRecoveryDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_PointInTimeRecoveryDescription(input):
    output = {}
    if input.PointInTimeRecoveryStatus.is_Some:
        output["PointInTimeRecoveryStatus"] = input.PointInTimeRecoveryStatus.value

    if input.EarliestRestorableDateTime.is_Some:
        output["EarliestRestorableDateTime"] = TypeError("TimestampShape not supported")

    if input.LatestRestorableDateTime.is_Some:
        output["LatestRestorableDateTime"] = TypeError("TimestampShape not supported")

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateContinuousBackupsOutput(input):
    output = {}
    if input.ContinuousBackupsDescription.is_Some:
        output["ContinuousBackupsDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ContinuousBackupsDescription(input.ContinuousBackupsDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_Endpoint(input):
    output = {}
    output["Address"] = input.Address.VerbatimString(False)
    output["CachePeriodInMinutes"] = input.CachePeriodInMinutes
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeEndpointsResponse(input):
    output = {}
    output["Endpoints"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Endpoint(list_element) for list_element in input.Endpoints]
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalTableDescription(input):
    output = {}
    if input.ReplicationGroup.is_Some:
        output["ReplicationGroup"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaDescription(list_element) for list_element in input.ReplicationGroup.value]

    if input.GlobalTableArn.is_Some:
        output["GlobalTableArn"] = input.GlobalTableArn.value.VerbatimString(False)

    if input.CreationDateTime.is_Some:
        output["CreationDateTime"] = TypeError("TimestampShape not supported")

    if input.GlobalTableStatus.is_Some:
        output["GlobalTableStatus"] = input.GlobalTableStatus.value

    if input.GlobalTableName.is_Some:
        output["GlobalTableName"] = input.GlobalTableName.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaDescription(input):
    output = {}
    if input.RegionName.is_Some:
        output["RegionName"] = input.RegionName.value.VerbatimString(False)

    if input.ReplicaStatus.is_Some:
        output["ReplicaStatus"] = input.ReplicaStatus.value

    if input.ReplicaStatusDescription.is_Some:
        output["ReplicaStatusDescription"] = input.ReplicaStatusDescription.value.VerbatimString(False)

    if input.ReplicaStatusPercentProgress.is_Some:
        output["ReplicaStatusPercentProgress"] = input.ReplicaStatusPercentProgress.value.VerbatimString(False)

    if input.KMSMasterKeyId.is_Some:
        output["KMSMasterKeyId"] = input.KMSMasterKeyId.value.VerbatimString(False)

    if input.ProvisionedThroughputOverride.is_Some:
        output["ProvisionedThroughputOverride"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.ProvisionedThroughputOverride.value)

    if input.GlobalSecondaryIndexes.is_Some:
        output["GlobalSecondaryIndexes"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexDescription(list_element) for list_element in input.GlobalSecondaryIndexes.value]

    if input.ReplicaInaccessibleDateTime.is_Some:
        output["ReplicaInaccessibleDateTime"] = TypeError("TimestampShape not supported")

    if input.ReplicaTableClassSummary.is_Some:
        output["ReplicaTableClassSummary"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableClassSummary(input.ReplicaTableClassSummary.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexDescription(input):
    output = {}
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.ProvisionedThroughputOverride.is_Some:
        output["ProvisionedThroughputOverride"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.ProvisionedThroughputOverride.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TableClassSummary(input):
    output = {}
    if input.TableClass.is_Some:
        output["TableClass"] = input.TableClass.value

    if input.LastUpdateDateTime.is_Some:
        output["LastUpdateDateTime"] = TypeError("TimestampShape not supported")

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeGlobalTableOutput(input):
    output = {}
    if input.GlobalTableDescription.is_Some:
        output["GlobalTableDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalTableDescription(input.GlobalTableDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListTagsOfResourceOutput(input):
    output = {}
    if input.Tags.is_Some:
        output["Tags"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Tag(list_element) for list_element in input.Tags.value]

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ImportSummary(input):
    output = {}
    if input.ImportArn.is_Some:
        output["ImportArn"] = input.ImportArn.value.VerbatimString(False)

    if input.ImportStatus.is_Some:
        output["ImportStatus"] = input.ImportStatus.value

    if input.TableArn.is_Some:
        output["TableArn"] = input.TableArn.value.VerbatimString(False)

    if input.S3BucketSource.is_Some:
        output["S3BucketSource"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_S3BucketSource(input.S3BucketSource.value)

    if input.CloudWatchLogGroupArn.is_Some:
        output["CloudWatchLogGroupArn"] = input.CloudWatchLogGroupArn.value.VerbatimString(False)

    if input.InputFormat.is_Some:
        output["InputFormat"] = input.InputFormat.value

    if input.StartTime.is_Some:
        output["StartTime"] = TypeError("TimestampShape not supported")

    if input.EndTime.is_Some:
        output["EndTime"] = TypeError("TimestampShape not supported")

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListImportsOutput(input):
    output = {}
    if input.ImportSummaryList.is_Some:
        output["ImportSummaryList"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ImportSummary(list_element) for list_element in input.ImportSummaryList.value]

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaSettingsDescription(input):
    output = {}
    output["RegionName"] = input.RegionName.VerbatimString(False)
    if input.ReplicaStatus.is_Some:
        output["ReplicaStatus"] = input.ReplicaStatus.value

    if input.ReplicaBillingModeSummary.is_Some:
        output["ReplicaBillingModeSummary"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_BillingModeSummary(input.ReplicaBillingModeSummary.value)

    if input.ReplicaProvisionedReadCapacityUnits.is_Some:
        output["ReplicaProvisionedReadCapacityUnits"] = input.ReplicaProvisionedReadCapacityUnits.value

    if input.ReplicaProvisionedReadCapacityAutoScalingSettings.is_Some:
        output["ReplicaProvisionedReadCapacityAutoScalingSettings"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ReplicaProvisionedReadCapacityAutoScalingSettings.value)

    if input.ReplicaProvisionedWriteCapacityUnits.is_Some:
        output["ReplicaProvisionedWriteCapacityUnits"] = input.ReplicaProvisionedWriteCapacityUnits.value

    if input.ReplicaProvisionedWriteCapacityAutoScalingSettings.is_Some:
        output["ReplicaProvisionedWriteCapacityAutoScalingSettings"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ReplicaProvisionedWriteCapacityAutoScalingSettings.value)

    if input.ReplicaGlobalSecondaryIndexSettings.is_Some:
        output["ReplicaGlobalSecondaryIndexSettings"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexSettingsDescription(list_element) for list_element in input.ReplicaGlobalSecondaryIndexSettings.value]

    if input.ReplicaTableClassSummary.is_Some:
        output["ReplicaTableClassSummary"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableClassSummary(input.ReplicaTableClassSummary.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BillingModeSummary(input):
    output = {}
    if input.BillingMode.is_Some:
        output["BillingMode"] = input.BillingMode.value

    if input.LastUpdateToPayPerRequestDateTime.is_Some:
        output["LastUpdateToPayPerRequestDateTime"] = TypeError("TimestampShape not supported")

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input):
    output = {}
    if input.MinimumUnits.is_Some:
        output["MinimumUnits"] = input.MinimumUnits.value

    if input.MaximumUnits.is_Some:
        output["MaximumUnits"] = input.MaximumUnits.value

    if input.AutoScalingDisabled.is_Some:
        output["AutoScalingDisabled"] = input.AutoScalingDisabled.value

    if input.AutoScalingRoleArn.is_Some:
        output["AutoScalingRoleArn"] = input.AutoScalingRoleArn.value.VerbatimString(False)

    if input.ScalingPolicies.is_Some:
        output["ScalingPolicies"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingPolicyDescription(list_element) for list_element in input.ScalingPolicies.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexSettingsDescription(input):
    output = {}
    output["IndexName"] = input.IndexName.VerbatimString(False)
    if input.IndexStatus.is_Some:
        output["IndexStatus"] = input.IndexStatus.value

    if input.ProvisionedReadCapacityUnits.is_Some:
        output["ProvisionedReadCapacityUnits"] = input.ProvisionedReadCapacityUnits.value

    if input.ProvisionedReadCapacityAutoScalingSettings.is_Some:
        output["ProvisionedReadCapacityAutoScalingSettings"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ProvisionedReadCapacityAutoScalingSettings.value)

    if input.ProvisionedWriteCapacityUnits.is_Some:
        output["ProvisionedWriteCapacityUnits"] = input.ProvisionedWriteCapacityUnits.value

    if input.ProvisionedWriteCapacityAutoScalingSettings.is_Some:
        output["ProvisionedWriteCapacityAutoScalingSettings"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ProvisionedWriteCapacityAutoScalingSettings.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingPolicyDescription(input):
    output = {}
    if input.PolicyName.is_Some:
        output["PolicyName"] = input.PolicyName.value.VerbatimString(False)

    if input.TargetTrackingScalingPolicyConfiguration.is_Some:
        output["TargetTrackingScalingPolicyConfiguration"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingTargetTrackingScalingPolicyConfigurationDescription(input.TargetTrackingScalingPolicyConfiguration.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingTargetTrackingScalingPolicyConfigurationDescription(input):
    output = {}
    if input.DisableScaleIn.is_Some:
        output["DisableScaleIn"] = input.DisableScaleIn.value

    if input.ScaleInCooldown.is_Some:
        output["ScaleInCooldown"] = input.ScaleInCooldown.value

    if input.ScaleOutCooldown.is_Some:
        output["ScaleOutCooldown"] = input.ScaleOutCooldown.value

    output["TargetValue"] = input.TargetValue
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateGlobalTableSettingsOutput(input):
    output = {}
    if input.GlobalTableName.is_Some:
        output["GlobalTableName"] = input.GlobalTableName.value.VerbatimString(False)

    if input.ReplicaSettings.is_Some:
        output["ReplicaSettings"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaSettingsDescription(list_element) for list_element in input.ReplicaSettings.value]

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ListKeyPoliciesResponse(input):
    output = {}
    if input.PolicyNames.is_Some:
        output["PolicyNames"] = [list_element.VerbatimString(False) for list_element in input.PolicyNames.value]

    if input.NextMarker.is_Some:
        output["NextMarker"] = input.NextMarker.value.VerbatimString(False)

    if input.Truncated.is_Some:
        output["Truncated"] = input.Truncated.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_CustomKeyStoresListEntry(input):
    output = {}
    if input.CustomKeyStoreId.is_Some:
        output["CustomKeyStoreId"] = input.CustomKeyStoreId.value.VerbatimString(False)

    if input.CustomKeyStoreName.is_Some:
        output["CustomKeyStoreName"] = input.CustomKeyStoreName.value.VerbatimString(False)

    if input.CloudHsmClusterId.is_Some:
        output["CloudHsmClusterId"] = input.CloudHsmClusterId.value.VerbatimString(False)

    if input.TrustAnchorCertificate.is_Some:
        output["TrustAnchorCertificate"] = input.TrustAnchorCertificate.value.VerbatimString(False)

    if input.ConnectionState.is_Some:
        output["ConnectionState"] = input.ConnectionState.value

    if input.ConnectionErrorCode.is_Some:
        output["ConnectionErrorCode"] = input.ConnectionErrorCode.value

    if input.CreationDate.is_Some:
        output["CreationDate"] = TypeError("TimestampShape not supported")

    return output

def DafnyToAwsSdk_com_amazonaws_kms_DescribeCustomKeyStoresResponse(input):
    output = {}
    if input.CustomKeyStores.is_Some:
        output["CustomKeyStores"] = [com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_CustomKeyStoresListEntry(list_element) for list_element in input.CustomKeyStores.value]

    if input.NextMarker.is_Some:
        output["NextMarker"] = input.NextMarker.value.VerbatimString(False)

    if input.Truncated.is_Some:
        output["Truncated"] = input.Truncated.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_CreateGrantResponse(input):
    output = {}
    if input.GrantToken.is_Some:
        output["GrantToken"] = input.GrantToken.value.VerbatimString(False)

    if input.GrantId.is_Some:
        output["GrantId"] = input.GrantId.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GrantListEntry(input):
    output = {}
    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.GrantId.is_Some:
        output["GrantId"] = input.GrantId.value.VerbatimString(False)

    if input.Name.is_Some:
        output["Name"] = input.Name.value.VerbatimString(False)

    if input.CreationDate.is_Some:
        output["CreationDate"] = TypeError("TimestampShape not supported")

    if input.GranteePrincipal.is_Some:
        output["GranteePrincipal"] = input.GranteePrincipal.value.VerbatimString(False)

    if input.RetiringPrincipal.is_Some:
        output["RetiringPrincipal"] = input.RetiringPrincipal.value.VerbatimString(False)

    if input.IssuingAccount.is_Some:
        output["IssuingAccount"] = input.IssuingAccount.value.VerbatimString(False)

    if input.Operations.is_Some:
        output["Operations"] = [list_element for list_element in input.Operations.value]

    if input.Constraints.is_Some:
        output["Constraints"] = com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_GrantConstraints(input.Constraints.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ListGrantsResponse(input):
    output = {}
    if input.Grants.is_Some:
        output["Grants"] = [com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_GrantListEntry(list_element) for list_element in input.Grants.value]

    if input.NextMarker.is_Some:
        output["NextMarker"] = input.NextMarker.value.VerbatimString(False)

    if input.Truncated.is_Some:
        output["Truncated"] = input.Truncated.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_SignResponse(input):
    output = {}
    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.Signature.is_Some:
        output["Signature"] = bytes(input.Signature.value)

    if input.SigningAlgorithm.is_Some:
        output["SigningAlgorithm"] = input.SigningAlgorithm.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GetKeyPolicyResponse(input):
    output = {}
    if input.Policy.is_Some:
        output["Policy"] = input.Policy.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeImportOutput(input):
    output = {}
    output["ImportTableDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ImportTableDescription(input.ImportTableDescription)
    return output

def DafnyToAwsSdk_com_amazonaws_kms_DisconnectCustomKeyStoreResponse(input):
    output = {}
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_KinesisDataStreamDestination(input):
    output = {}
    if input.StreamArn.is_Some:
        output["StreamArn"] = input.StreamArn.value.VerbatimString(False)

    if input.DestinationStatus.is_Some:
        output["DestinationStatus"] = input.DestinationStatus.value

    if input.DestinationStatusDescription.is_Some:
        output["DestinationStatusDescription"] = input.DestinationStatusDescription.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeKinesisStreamingDestinationOutput(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.KinesisDataStreamDestinations.is_Some:
        output["KinesisDataStreamDestinations"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KinesisDataStreamDestination(list_element) for list_element in input.KinesisDataStreamDestinations.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.CapacityUnits.is_Some:
        output["CapacityUnits"] = input.CapacityUnits.value

    if input.ReadCapacityUnits.is_Some:
        output["ReadCapacityUnits"] = input.ReadCapacityUnits.value

    if input.WriteCapacityUnits.is_Some:
        output["WriteCapacityUnits"] = input.WriteCapacityUnits.value

    if input.Table.is_Some:
        output["Table"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Capacity(input.Table.value)

    if input.LocalSecondaryIndexes.is_Some:
        output["LocalSecondaryIndexes"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Capacity(value) for (key, value) in input.LocalSecondaryIndexes.value.items }

    if input.GlobalSecondaryIndexes.is_Some:
        output["GlobalSecondaryIndexes"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Capacity(value) for (key, value) in input.GlobalSecondaryIndexes.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_Capacity(input):
    output = {}
    if input.ReadCapacityUnits.is_Some:
        output["ReadCapacityUnits"] = input.ReadCapacityUnits.value

    if input.WriteCapacityUnits.is_Some:
        output["WriteCapacityUnits"] = input.WriteCapacityUnits.value

    if input.CapacityUnits.is_Some:
        output["CapacityUnits"] = input.CapacityUnits.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_QueryOutput(input):
    output = {}
    if input.Items.is_Some:
        output["Items"] = [{key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in list_element.items } for list_element in input.Items.value]

    if input.Count.is_Some:
        output["Count"] = input.Count.value

    if input.ScannedCount.is_Some:
        output["ScannedCount"] = input.ScannedCount.value

    if input.LastEvaluatedKey.is_Some:
        output["LastEvaluatedKey"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.LastEvaluatedKey.value.items }

    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextResponse(input):
    output = {}
    if input.PrivateKeyCiphertextBlob.is_Some:
        output["PrivateKeyCiphertextBlob"] = bytes(input.PrivateKeyCiphertextBlob.value)

    if input.PublicKey.is_Some:
        output["PublicKey"] = bytes(input.PublicKey.value)

    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.KeyPairSpec.is_Some:
        output["KeyPairSpec"] = input.KeyPairSpec.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_GetItemOutput(input):
    output = {}
    if input.Item.is_Some:
        output["Item"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.value.items }

    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ListResourceTagsResponse(input):
    output = {}
    if input.Tags.is_Some:
        output["Tags"] = [com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_Tag(list_element) for list_element in input.Tags.value]

    if input.NextMarker.is_Some:
        output["NextMarker"] = input.NextMarker.value.VerbatimString(False)

    if input.Truncated.is_Some:
        output["Truncated"] = input.Truncated.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_KeyMetadata(input):
    output = {}
    if input.AWSAccountId.is_Some:
        output["AWSAccountId"] = input.AWSAccountId.value.VerbatimString(False)

    output["KeyId"] = input.KeyId.VerbatimString(False)
    if input.Arn.is_Some:
        output["Arn"] = input.Arn.value.VerbatimString(False)

    if input.CreationDate.is_Some:
        output["CreationDate"] = TypeError("TimestampShape not supported")

    if input.Enabled.is_Some:
        output["Enabled"] = input.Enabled.value

    if input.Description.is_Some:
        output["Description"] = input.Description.value.VerbatimString(False)

    if input.KeyUsage.is_Some:
        output["KeyUsage"] = input.KeyUsage.value

    if input.KeyState.is_Some:
        output["KeyState"] = input.KeyState.value

    if input.DeletionDate.is_Some:
        output["DeletionDate"] = TypeError("TimestampShape not supported")

    if input.ValidTo.is_Some:
        output["ValidTo"] = TypeError("TimestampShape not supported")

    if input.Origin.is_Some:
        output["Origin"] = input.Origin.value

    if input.CustomKeyStoreId.is_Some:
        output["CustomKeyStoreId"] = input.CustomKeyStoreId.value.VerbatimString(False)

    if input.CloudHsmClusterId.is_Some:
        output["CloudHsmClusterId"] = input.CloudHsmClusterId.value.VerbatimString(False)

    if input.ExpirationModel.is_Some:
        output["ExpirationModel"] = input.ExpirationModel.value

    if input.KeyManager.is_Some:
        output["KeyManager"] = input.KeyManager.value

    if input.CustomerMasterKeySpec.is_Some:
        output["CustomerMasterKeySpec"] = input.CustomerMasterKeySpec.value

    if input.KeySpec.is_Some:
        output["KeySpec"] = input.KeySpec.value

    if input.EncryptionAlgorithms.is_Some:
        output["EncryptionAlgorithms"] = [list_element for list_element in input.EncryptionAlgorithms.value]

    if input.SigningAlgorithms.is_Some:
        output["SigningAlgorithms"] = [list_element for list_element in input.SigningAlgorithms.value]

    if input.MultiRegion.is_Some:
        output["MultiRegion"] = input.MultiRegion.value

    if input.MultiRegionConfiguration.is_Some:
        output["MultiRegionConfiguration"] = com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_MultiRegionConfiguration(input.MultiRegionConfiguration.value)

    if input.PendingDeletionWindowInDays.is_Some:
        output["PendingDeletionWindowInDays"] = input.PendingDeletionWindowInDays.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_MultiRegionConfiguration(input):
    output = {}
    if input.MultiRegionKeyType.is_Some:
        output["MultiRegionKeyType"] = input.MultiRegionKeyType.value

    if input.PrimaryKey.is_Some:
        output["PrimaryKey"] = com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_MultiRegionKey(input.PrimaryKey.value)

    if input.ReplicaKeys.is_Some:
        output["ReplicaKeys"] = [com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_MultiRegionKey(list_element) for list_element in input.ReplicaKeys.value]

    return output

def DafnyToAwsSdk_com_amazonaws_kms_MultiRegionKey(input):
    output = {}
    if input.Arn.is_Some:
        output["Arn"] = input.Arn.value.VerbatimString(False)

    if input.Region.is_Some:
        output["Region"] = input.Region.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_CreateKeyResponse(input):
    output = {}
    if input.KeyMetadata.is_Some:
        output["KeyMetadata"] = com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_KeyMetadata(input.KeyMetadata.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GenerateDataKeyWithoutPlaintextResponse(input):
    output = {}
    if input.CiphertextBlob.is_Some:
        output["CiphertextBlob"] = bytes(input.CiphertextBlob.value)

    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TableAutoScalingDescription(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.TableStatus.is_Some:
        output["TableStatus"] = input.TableStatus.value

    if input.Replicas.is_Some:
        output["Replicas"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaAutoScalingDescription(list_element) for list_element in input.Replicas.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaAutoScalingDescription(input):
    output = {}
    if input.RegionName.is_Some:
        output["RegionName"] = input.RegionName.value.VerbatimString(False)

    if input.GlobalSecondaryIndexes.is_Some:
        output["GlobalSecondaryIndexes"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexAutoScalingDescription(list_element) for list_element in input.GlobalSecondaryIndexes.value]

    if input.ReplicaProvisionedReadCapacityAutoScalingSettings.is_Some:
        output["ReplicaProvisionedReadCapacityAutoScalingSettings"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ReplicaProvisionedReadCapacityAutoScalingSettings.value)

    if input.ReplicaProvisionedWriteCapacityAutoScalingSettings.is_Some:
        output["ReplicaProvisionedWriteCapacityAutoScalingSettings"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ReplicaProvisionedWriteCapacityAutoScalingSettings.value)

    if input.ReplicaStatus.is_Some:
        output["ReplicaStatus"] = input.ReplicaStatus.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexAutoScalingDescription(input):
    output = {}
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.IndexStatus.is_Some:
        output["IndexStatus"] = input.IndexStatus.value

    if input.ProvisionedReadCapacityAutoScalingSettings.is_Some:
        output["ProvisionedReadCapacityAutoScalingSettings"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ProvisionedReadCapacityAutoScalingSettings.value)

    if input.ProvisionedWriteCapacityAutoScalingSettings.is_Some:
        output["ProvisionedWriteCapacityAutoScalingSettings"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ProvisionedWriteCapacityAutoScalingSettings.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeTableReplicaAutoScalingOutput(input):
    output = {}
    if input.TableAutoScalingDescription.is_Some:
        output["TableAutoScalingDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableAutoScalingDescription(input.TableAutoScalingDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TableDescription(input):
    output = {}
    if input.AttributeDefinitions.is_Some:
        output["AttributeDefinitions"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeDefinition(list_element) for list_element in input.AttributeDefinitions.value]

    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.KeySchema.is_Some:
        output["KeySchema"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema.value]

    if input.TableStatus.is_Some:
        output["TableStatus"] = input.TableStatus.value

    if input.CreationDateTime.is_Some:
        output["CreationDateTime"] = TypeError("TimestampShape not supported")

    if input.ProvisionedThroughput.is_Some:
        output["ProvisionedThroughput"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughputDescription(input.ProvisionedThroughput.value)

    if input.TableSizeBytes.is_Some:
        output["TableSizeBytes"] = input.TableSizeBytes.value

    if input.ItemCount.is_Some:
        output["ItemCount"] = input.ItemCount.value

    if input.TableArn.is_Some:
        output["TableArn"] = input.TableArn.value.VerbatimString(False)

    if input.TableId.is_Some:
        output["TableId"] = input.TableId.value.VerbatimString(False)

    if input.BillingModeSummary.is_Some:
        output["BillingModeSummary"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_BillingModeSummary(input.BillingModeSummary.value)

    if input.LocalSecondaryIndexes.is_Some:
        output["LocalSecondaryIndexes"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_LocalSecondaryIndexDescription(list_element) for list_element in input.LocalSecondaryIndexes.value]

    if input.GlobalSecondaryIndexes.is_Some:
        output["GlobalSecondaryIndexes"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndexDescription(list_element) for list_element in input.GlobalSecondaryIndexes.value]

    if input.StreamSpecification.is_Some:
        output["StreamSpecification"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_StreamSpecification(input.StreamSpecification.value)

    if input.LatestStreamLabel.is_Some:
        output["LatestStreamLabel"] = input.LatestStreamLabel.value.VerbatimString(False)

    if input.LatestStreamArn.is_Some:
        output["LatestStreamArn"] = input.LatestStreamArn.value.VerbatimString(False)

    if input.GlobalTableVersion.is_Some:
        output["GlobalTableVersion"] = input.GlobalTableVersion.value.VerbatimString(False)

    if input.Replicas.is_Some:
        output["Replicas"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaDescription(list_element) for list_element in input.Replicas.value]

    if input.RestoreSummary.is_Some:
        output["RestoreSummary"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_RestoreSummary(input.RestoreSummary.value)

    if input.SSEDescription.is_Some:
        output["SSEDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_SSEDescription(input.SSEDescription.value)

    if input.ArchivalSummary.is_Some:
        output["ArchivalSummary"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ArchivalSummary(input.ArchivalSummary.value)

    if input.TableClassSummary.is_Some:
        output["TableClassSummary"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableClassSummary(input.TableClassSummary.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughputDescription(input):
    output = {}
    if input.LastIncreaseDateTime.is_Some:
        output["LastIncreaseDateTime"] = TypeError("TimestampShape not supported")

    if input.LastDecreaseDateTime.is_Some:
        output["LastDecreaseDateTime"] = TypeError("TimestampShape not supported")

    if input.NumberOfDecreasesToday.is_Some:
        output["NumberOfDecreasesToday"] = input.NumberOfDecreasesToday.value

    if input.ReadCapacityUnits.is_Some:
        output["ReadCapacityUnits"] = input.ReadCapacityUnits.value

    if input.WriteCapacityUnits.is_Some:
        output["WriteCapacityUnits"] = input.WriteCapacityUnits.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_LocalSecondaryIndexDescription(input):
    output = {}
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.KeySchema.is_Some:
        output["KeySchema"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema.value]

    if input.Projection.is_Some:
        output["Projection"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Projection(input.Projection.value)

    if input.IndexSizeBytes.is_Some:
        output["IndexSizeBytes"] = input.IndexSizeBytes.value

    if input.ItemCount.is_Some:
        output["ItemCount"] = input.ItemCount.value

    if input.IndexArn.is_Some:
        output["IndexArn"] = input.IndexArn.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndexDescription(input):
    output = {}
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.KeySchema.is_Some:
        output["KeySchema"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema.value]

    if input.Projection.is_Some:
        output["Projection"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Projection(input.Projection.value)

    if input.IndexStatus.is_Some:
        output["IndexStatus"] = input.IndexStatus.value

    if input.Backfilling.is_Some:
        output["Backfilling"] = input.Backfilling.value

    if input.ProvisionedThroughput.is_Some:
        output["ProvisionedThroughput"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughputDescription(input.ProvisionedThroughput.value)

    if input.IndexSizeBytes.is_Some:
        output["IndexSizeBytes"] = input.IndexSizeBytes.value

    if input.ItemCount.is_Some:
        output["ItemCount"] = input.ItemCount.value

    if input.IndexArn.is_Some:
        output["IndexArn"] = input.IndexArn.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_RestoreSummary(input):
    output = {}
    if input.SourceBackupArn.is_Some:
        output["SourceBackupArn"] = input.SourceBackupArn.value.VerbatimString(False)

    if input.SourceTableArn.is_Some:
        output["SourceTableArn"] = input.SourceTableArn.value.VerbatimString(False)

    output["RestoreDateTime"] = TypeError("TimestampShape not supported")
    output["RestoreInProgress"] = input.RestoreInProgress
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_SSEDescription(input):
    output = {}
    if input.Status.is_Some:
        output["Status"] = input.Status.value

    if input.SSEType.is_Some:
        output["SSEType"] = input.SSEType.value

    if input.KMSMasterKeyArn.is_Some:
        output["KMSMasterKeyArn"] = input.KMSMasterKeyArn.value.VerbatimString(False)

    if input.InaccessibleEncryptionDateTime.is_Some:
        output["InaccessibleEncryptionDateTime"] = TypeError("TimestampShape not supported")

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ArchivalSummary(input):
    output = {}
    if input.ArchivalDateTime.is_Some:
        output["ArchivalDateTime"] = TypeError("TimestampShape not supported")

    if input.ArchivalReason.is_Some:
        output["ArchivalReason"] = input.ArchivalReason.value.VerbatimString(False)

    if input.ArchivalBackupArn.is_Some:
        output["ArchivalBackupArn"] = input.ArchivalBackupArn.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_RestoreTableToPointInTimeOutput(input):
    output = {}
    if input.TableDescription.is_Some:
        output["TableDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableDescription(input.TableDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeLimitsOutput(input):
    output = {}
    if input.AccountMaxReadCapacityUnits.is_Some:
        output["AccountMaxReadCapacityUnits"] = input.AccountMaxReadCapacityUnits.value

    if input.AccountMaxWriteCapacityUnits.is_Some:
        output["AccountMaxWriteCapacityUnits"] = input.AccountMaxWriteCapacityUnits.value

    if input.TableMaxReadCapacityUnits.is_Some:
        output["TableMaxReadCapacityUnits"] = input.TableMaxReadCapacityUnits.value

    if input.TableMaxWriteCapacityUnits.is_Some:
        output["TableMaxWriteCapacityUnits"] = input.TableMaxWriteCapacityUnits.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_EnableKinesisStreamingDestinationOutput(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.StreamArn.is_Some:
        output["StreamArn"] = input.StreamArn.value.VerbatimString(False)

    if input.DestinationStatus.is_Some:
        output["DestinationStatus"] = input.DestinationStatus.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ItemResponse(input):
    output = {}
    if input.Item.is_Some:
        output["Item"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ExecuteTransactionOutput(input):
    output = {}
    if input.Responses.is_Some:
        output["Responses"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ItemResponse(list_element) for list_element in input.Responses.value]

    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(list_element) for list_element in input.ConsumedCapacity.value]

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ReplicateKeyResponse(input):
    output = {}
    if input.ReplicaKeyMetadata.is_Some:
        output["ReplicaKeyMetadata"] = com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_KeyMetadata(input.ReplicaKeyMetadata.value)

    if input.ReplicaPolicy.is_Some:
        output["ReplicaPolicy"] = input.ReplicaPolicy.value.VerbatimString(False)

    if input.ReplicaTags.is_Some:
        output["ReplicaTags"] = [com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_Tag(list_element) for list_element in input.ReplicaTags.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_FailureException(input):
    output = {}
    if input.ExceptionName.is_Some:
        output["ExceptionName"] = input.ExceptionName.value.VerbatimString(False)

    if input.ExceptionDescription.is_Some:
        output["ExceptionDescription"] = input.ExceptionDescription.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeContributorInsightsOutput(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.ContributorInsightsRuleList.is_Some:
        output["ContributorInsightsRuleList"] = [list_element.VerbatimString(False) for list_element in input.ContributorInsightsRuleList.value]

    if input.ContributorInsightsStatus.is_Some:
        output["ContributorInsightsStatus"] = input.ContributorInsightsStatus.value

    if input.LastUpdateDateTime.is_Some:
        output["LastUpdateDateTime"] = TypeError("TimestampShape not supported")

    if input.FailureException.is_Some:
        output["FailureException"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_FailureException(input.FailureException.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ConnectCustomKeyStoreResponse(input):
    output = {}
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ItemCollectionMetrics(input):
    output = {}
    if input.ItemCollectionKey.is_Some:
        output["ItemCollectionKey"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ItemCollectionKey.value.items }

    if input.SizeEstimateRangeGB.is_Some:
        output["SizeEstimateRangeGB"] = [list_element for list_element in input.SizeEstimateRangeGB.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BatchWriteItemOutput(input):
    output = {}
    if input.UnprocessedItems.is_Some:
        output["UnprocessedItems"] = {key.VerbatimString(False): [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_WriteRequest(list_element) for list_element in value] for (key, value) in input.UnprocessedItems.value.items }

    if input.ItemCollectionMetrics.is_Some:
        output["ItemCollectionMetrics"] = {key.VerbatimString(False): [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ItemCollectionMetrics(list_element) for list_element in value] for (key, value) in input.ItemCollectionMetrics.value.items }

    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(list_element) for list_element in input.ConsumedCapacity.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BatchStatementResponse(input):
    output = {}
    if input.Error.is_Some:
        output["Error"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_BatchStatementError(input.Error.value)

    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.Item.is_Some:
        output["Item"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BatchStatementError(input):
    output = {}
    if input.Code.is_Some:
        output["Code"] = input.Code.value

    if input.Message.is_Some:
        output["Message"] = input.Message.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BatchExecuteStatementOutput(input):
    output = {}
    if input.Responses.is_Some:
        output["Responses"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_BatchStatementResponse(list_element) for list_element in input.Responses.value]

    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(list_element) for list_element in input.ConsumedCapacity.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ExportSummary(input):
    output = {}
    if input.ExportArn.is_Some:
        output["ExportArn"] = input.ExportArn.value.VerbatimString(False)

    if input.ExportStatus.is_Some:
        output["ExportStatus"] = input.ExportStatus.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListExportsOutput(input):
    output = {}
    if input.ExportSummaries.is_Some:
        output["ExportSummaries"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ExportSummary(list_element) for list_element in input.ExportSummaries.value]

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GetPublicKeyResponse(input):
    output = {}
    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.PublicKey.is_Some:
        output["PublicKey"] = bytes(input.PublicKey.value)

    if input.CustomerMasterKeySpec.is_Some:
        output["CustomerMasterKeySpec"] = input.CustomerMasterKeySpec.value

    if input.KeySpec.is_Some:
        output["KeySpec"] = input.KeySpec.value

    if input.KeyUsage.is_Some:
        output["KeyUsage"] = input.KeyUsage.value

    if input.EncryptionAlgorithms.is_Some:
        output["EncryptionAlgorithms"] = [list_element for list_element in input.EncryptionAlgorithms.value]

    if input.SigningAlgorithms.is_Some:
        output["SigningAlgorithms"] = [list_element for list_element in input.SigningAlgorithms.value]

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GenerateDataKeyResponse(input):
    output = {}
    if input.CiphertextBlob.is_Some:
        output["CiphertextBlob"] = bytes(input.CiphertextBlob.value)

    if input.Plaintext.is_Some:
        output["Plaintext"] = bytes(input.Plaintext.value)

    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListTablesOutput(input):
    output = {}
    if input.TableNames.is_Some:
        output["TableNames"] = [list_element.VerbatimString(False) for list_element in input.TableNames.value]

    if input.LastEvaluatedTableName.is_Some:
        output["LastEvaluatedTableName"] = input.LastEvaluatedTableName.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_DeleteCustomKeyStoreResponse(input):
    output = {}
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_RestoreTableFromBackupOutput(input):
    output = {}
    if input.TableDescription.is_Some:
        output["TableDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableDescription(input.TableDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ReEncryptResponse(input):
    output = {}
    if input.CiphertextBlob.is_Some:
        output["CiphertextBlob"] = bytes(input.CiphertextBlob.value)

    if input.SourceKeyId.is_Some:
        output["SourceKeyId"] = input.SourceKeyId.value.VerbatimString(False)

    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.SourceEncryptionAlgorithm.is_Some:
        output["SourceEncryptionAlgorithm"] = input.SourceEncryptionAlgorithm.value

    if input.DestinationEncryptionAlgorithm.is_Some:
        output["DestinationEncryptionAlgorithm"] = input.DestinationEncryptionAlgorithm.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TransactGetItemsOutput(input):
    output = {}
    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(list_element) for list_element in input.ConsumedCapacity.value]

    if input.Responses.is_Some:
        output["Responses"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ItemResponse(list_element) for list_element in input.Responses.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TimeToLiveDescription(input):
    output = {}
    if input.TimeToLiveStatus.is_Some:
        output["TimeToLiveStatus"] = input.TimeToLiveStatus.value

    if input.AttributeName.is_Some:
        output["AttributeName"] = input.AttributeName.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeTimeToLiveOutput(input):
    output = {}
    if input.TimeToLiveDescription.is_Some:
        output["TimeToLiveDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TimeToLiveDescription(input.TimeToLiveDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateTimeToLiveOutput(input):
    output = {}
    if input.TimeToLiveSpecification.is_Some:
        output["TimeToLiveSpecification"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TimeToLiveSpecification(input.TimeToLiveSpecification.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GetParametersForImportResponse(input):
    output = {}
    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.ImportToken.is_Some:
        output["ImportToken"] = bytes(input.ImportToken.value)

    if input.PublicKey.is_Some:
        output["PublicKey"] = bytes(input.PublicKey.value)

    if input.ParametersValidTo.is_Some:
        output["ParametersValidTo"] = TypeError("TimestampShape not supported")

    return output

def DafnyToAwsSdk_com_amazonaws_kms_UpdateCustomKeyStoreResponse(input):
    output = {}
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteTableOutput(input):
    output = {}
    if input.TableDescription.is_Some:
        output["TableDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableDescription(input.TableDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_TransactWriteItemsOutput(input):
    output = {}
    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(list_element) for list_element in input.ConsumedCapacity.value]

    if input.ItemCollectionMetrics.is_Some:
        output["ItemCollectionMetrics"] = {key.VerbatimString(False): [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ItemCollectionMetrics(list_element) for list_element in value] for (key, value) in input.ItemCollectionMetrics.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_CreateGlobalTableOutput(input):
    output = {}
    if input.GlobalTableDescription.is_Some:
        output["GlobalTableDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalTableDescription(input.GlobalTableDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BackupDetails(input):
    output = {}
    output["BackupArn"] = input.BackupArn.VerbatimString(False)
    output["BackupName"] = input.BackupName.VerbatimString(False)
    if input.BackupSizeBytes.is_Some:
        output["BackupSizeBytes"] = input.BackupSizeBytes.value

    output["BackupStatus"] = input.BackupStatus
    output["BackupType"] = input.BackupType
    output["BackupCreationDateTime"] = TypeError("TimestampShape not supported")
    if input.BackupExpiryDateTime.is_Some:
        output["BackupExpiryDateTime"] = TypeError("TimestampShape not supported")

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_CreateBackupOutput(input):
    output = {}
    if input.BackupDetails.is_Some:
        output["BackupDetails"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_BackupDetails(input.BackupDetails.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeGlobalTableSettingsOutput(input):
    output = {}
    if input.GlobalTableName.is_Some:
        output["GlobalTableName"] = input.GlobalTableName.value.VerbatimString(False)

    if input.ReplicaSettings.is_Some:
        output["ReplicaSettings"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ReplicaSettingsDescription(list_element) for list_element in input.ReplicaSettings.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeContinuousBackupsOutput(input):
    output = {}
    if input.ContinuousBackupsDescription.is_Some:
        output["ContinuousBackupsDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ContinuousBackupsDescription(input.ContinuousBackupsDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_DescribeKeyResponse(input):
    output = {}
    if input.KeyMetadata.is_Some:
        output["KeyMetadata"] = com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_KeyMetadata(input.KeyMetadata.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateTableOutput(input):
    output = {}
    if input.TableDescription.is_Some:
        output["TableDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableDescription(input.TableDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GenerateDataKeyPairResponse(input):
    output = {}
    if input.PrivateKeyCiphertextBlob.is_Some:
        output["PrivateKeyCiphertextBlob"] = bytes(input.PrivateKeyCiphertextBlob.value)

    if input.PrivateKeyPlaintext.is_Some:
        output["PrivateKeyPlaintext"] = bytes(input.PrivateKeyPlaintext.value)

    if input.PublicKey.is_Some:
        output["PublicKey"] = bytes(input.PublicKey.value)

    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.KeyPairSpec.is_Some:
        output["KeyPairSpec"] = input.KeyPairSpec.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeTableOutput(input):
    output = {}
    if input.Table.is_Some:
        output["Table"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableDescription(input.Table.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GenerateRandomResponse(input):
    output = {}
    if input.Plaintext.is_Some:
        output["Plaintext"] = bytes(input.Plaintext.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ExportDescription(input):
    output = {}
    if input.ExportArn.is_Some:
        output["ExportArn"] = input.ExportArn.value.VerbatimString(False)

    if input.ExportStatus.is_Some:
        output["ExportStatus"] = input.ExportStatus.value

    if input.StartTime.is_Some:
        output["StartTime"] = TypeError("TimestampShape not supported")

    if input.EndTime.is_Some:
        output["EndTime"] = TypeError("TimestampShape not supported")

    if input.ExportManifest.is_Some:
        output["ExportManifest"] = input.ExportManifest.value.VerbatimString(False)

    if input.TableArn.is_Some:
        output["TableArn"] = input.TableArn.value.VerbatimString(False)

    if input.TableId.is_Some:
        output["TableId"] = input.TableId.value.VerbatimString(False)

    if input.ExportTime.is_Some:
        output["ExportTime"] = TypeError("TimestampShape not supported")

    if input.ClientToken.is_Some:
        output["ClientToken"] = input.ClientToken.value.VerbatimString(False)

    if input.S3Bucket.is_Some:
        output["S3Bucket"] = input.S3Bucket.value.VerbatimString(False)

    if input.S3BucketOwner.is_Some:
        output["S3BucketOwner"] = input.S3BucketOwner.value.VerbatimString(False)

    if input.S3Prefix.is_Some:
        output["S3Prefix"] = input.S3Prefix.value.VerbatimString(False)

    if input.S3SseAlgorithm.is_Some:
        output["S3SseAlgorithm"] = input.S3SseAlgorithm.value

    if input.S3SseKmsKeyId.is_Some:
        output["S3SseKmsKeyId"] = input.S3SseKmsKeyId.value.VerbatimString(False)

    if input.FailureCode.is_Some:
        output["FailureCode"] = input.FailureCode.value.VerbatimString(False)

    if input.FailureMessage.is_Some:
        output["FailureMessage"] = input.FailureMessage.value.VerbatimString(False)

    if input.ExportFormat.is_Some:
        output["ExportFormat"] = input.ExportFormat.value

    if input.BilledSizeBytes.is_Some:
        output["BilledSizeBytes"] = input.BilledSizeBytes.value

    if input.ItemCount.is_Some:
        output["ItemCount"] = input.ItemCount.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ExportTableToPointInTimeOutput(input):
    output = {}
    if input.ExportDescription.is_Some:
        output["ExportDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ExportDescription(input.ExportDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BackupDescription(input):
    output = {}
    if input.BackupDetails.is_Some:
        output["BackupDetails"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_BackupDetails(input.BackupDetails.value)

    if input.SourceTableDetails.is_Some:
        output["SourceTableDetails"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_SourceTableDetails(input.SourceTableDetails.value)

    if input.SourceTableFeatureDetails.is_Some:
        output["SourceTableFeatureDetails"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_SourceTableFeatureDetails(input.SourceTableFeatureDetails.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_SourceTableDetails(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["TableId"] = input.TableId.VerbatimString(False)
    if input.TableArn.is_Some:
        output["TableArn"] = input.TableArn.value.VerbatimString(False)

    if input.TableSizeBytes.is_Some:
        output["TableSizeBytes"] = input.TableSizeBytes.value

    output["KeySchema"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema]
    output["TableCreationDateTime"] = TypeError("TimestampShape not supported")
    output["ProvisionedThroughput"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput)
    if input.ItemCount.is_Some:
        output["ItemCount"] = input.ItemCount.value

    if input.BillingMode.is_Some:
        output["BillingMode"] = input.BillingMode.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_SourceTableFeatureDetails(input):
    output = {}
    if input.LocalSecondaryIndexes.is_Some:
        output["LocalSecondaryIndexes"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_LocalSecondaryIndexInfo(list_element) for list_element in input.LocalSecondaryIndexes.value]

    if input.GlobalSecondaryIndexes.is_Some:
        output["GlobalSecondaryIndexes"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndexInfo(list_element) for list_element in input.GlobalSecondaryIndexes.value]

    if input.StreamDescription.is_Some:
        output["StreamDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_StreamSpecification(input.StreamDescription.value)

    if input.TimeToLiveDescription.is_Some:
        output["TimeToLiveDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TimeToLiveDescription(input.TimeToLiveDescription.value)

    if input.SSEDescription.is_Some:
        output["SSEDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_SSEDescription(input.SSEDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_LocalSecondaryIndexInfo(input):
    output = {}
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.KeySchema.is_Some:
        output["KeySchema"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema.value]

    if input.Projection.is_Some:
        output["Projection"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Projection(input.Projection.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalSecondaryIndexInfo(input):
    output = {}
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.KeySchema.is_Some:
        output["KeySchema"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema.value]

    if input.Projection.is_Some:
        output["Projection"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Projection(input.Projection.value)

    if input.ProvisionedThroughput.is_Some:
        output["ProvisionedThroughput"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteBackupOutput(input):
    output = {}
    if input.BackupDescription.is_Some:
        output["BackupDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_BackupDescription(input.BackupDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_EncryptResponse(input):
    output = {}
    if input.CiphertextBlob.is_Some:
        output["CiphertextBlob"] = bytes(input.CiphertextBlob.value)

    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.EncryptionAlgorithm.is_Some:
        output["EncryptionAlgorithm"] = input.EncryptionAlgorithm.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ExecuteStatementOutput(input):
    output = {}
    if input.Items.is_Some:
        output["Items"] = [{key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in list_element.items } for list_element in input.Items.value]

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.value)

    if input.LastEvaluatedKey.is_Some:
        output["LastEvaluatedKey"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.LastEvaluatedKey.value.items }

    return output

def DafnyToAwsSdk_com_amazonaws_kms_CancelKeyDeletionResponse(input):
    output = {}
    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BatchGetItemOutput(input):
    output = {}
    if input.Responses.is_Some:
        output["Responses"] = {key.VerbatimString(False): [{key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in list_element.items } for list_element in value] for (key, value) in input.Responses.value.items }

    if input.UnprocessedKeys.is_Some:
        output["UnprocessedKeys"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_KeysAndAttributes(value) for (key, value) in input.UnprocessedKeys.value.items }

    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(list_element) for list_element in input.ConsumedCapacity.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_PutItemOutput(input):
    output = {}
    if input.Attributes.is_Some:
        output["Attributes"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Attributes.value.items }

    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.value)

    if input.ItemCollectionMetrics.is_Some:
        output["ItemCollectionMetrics"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ItemCollectionMetrics(input.ItemCollectionMetrics.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_CreateTableOutput(input):
    output = {}
    if input.TableDescription.is_Some:
        output["TableDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableDescription(input.TableDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DisableKinesisStreamingDestinationOutput(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.StreamArn.is_Some:
        output["StreamArn"] = input.StreamArn.value.VerbatimString(False)

    if input.DestinationStatus.is_Some:
        output["DestinationStatus"] = input.DestinationStatus.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ScheduleKeyDeletionResponse(input):
    output = {}
    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.DeletionDate.is_Some:
        output["DeletionDate"] = TypeError("TimestampShape not supported")

    if input.KeyState.is_Some:
        output["KeyState"] = input.KeyState.value

    if input.PendingWindowInDays.is_Some:
        output["PendingWindowInDays"] = input.PendingWindowInDays.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_AliasListEntry(input):
    output = {}
    if input.AliasName.is_Some:
        output["AliasName"] = input.AliasName.value.VerbatimString(False)

    if input.AliasArn.is_Some:
        output["AliasArn"] = input.AliasArn.value.VerbatimString(False)

    if input.TargetKeyId.is_Some:
        output["TargetKeyId"] = input.TargetKeyId.value.VerbatimString(False)

    if input.CreationDate.is_Some:
        output["CreationDate"] = TypeError("TimestampShape not supported")

    if input.LastUpdatedDate.is_Some:
        output["LastUpdatedDate"] = TypeError("TimestampShape not supported")

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ListAliasesResponse(input):
    output = {}
    if input.Aliases.is_Some:
        output["Aliases"] = [com_amazonaws_kms.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_kms_AliasListEntry(list_element) for list_element in input.Aliases.value]

    if input.NextMarker.is_Some:
        output["NextMarker"] = input.NextMarker.value.VerbatimString(False)

    if input.Truncated.is_Some:
        output["Truncated"] = input.Truncated.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_GetKeyRotationStatusResponse(input):
    output = {}
    if input.KeyRotationEnabled.is_Some:
        output["KeyRotationEnabled"] = input.KeyRotationEnabled.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateTableReplicaAutoScalingOutput(input):
    output = {}
    if input.TableAutoScalingDescription.is_Some:
        output["TableAutoScalingDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_TableAutoScalingDescription(input.TableAutoScalingDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_CreateCustomKeyStoreResponse(input):
    output = {}
    if input.CustomKeyStoreId.is_Some:
        output["CustomKeyStoreId"] = input.CustomKeyStoreId.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateItemOutput(input):
    output = {}
    if input.Attributes.is_Some:
        output["Attributes"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Attributes.value.items }

    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.value)

    if input.ItemCollectionMetrics.is_Some:
        output["ItemCollectionMetrics"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ItemCollectionMetrics(input.ItemCollectionMetrics.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ScanOutput(input):
    output = {}
    if input.Items.is_Some:
        output["Items"] = [{key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in list_element.items } for list_element in input.Items.value]

    if input.Count.is_Some:
        output["Count"] = input.Count.value

    if input.ScannedCount.is_Some:
        output["ScannedCount"] = input.ScannedCount.value

    if input.LastEvaluatedKey.is_Some:
        output["LastEvaluatedKey"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.LastEvaluatedKey.value.items }

    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeExportOutput(input):
    output = {}
    if input.ExportDescription.is_Some:
        output["ExportDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ExportDescription(input.ExportDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateContributorInsightsOutput(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.ContributorInsightsStatus.is_Some:
        output["ContributorInsightsStatus"] = input.ContributorInsightsStatus.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_BackupSummary(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.TableId.is_Some:
        output["TableId"] = input.TableId.value.VerbatimString(False)

    if input.TableArn.is_Some:
        output["TableArn"] = input.TableArn.value.VerbatimString(False)

    if input.BackupArn.is_Some:
        output["BackupArn"] = input.BackupArn.value.VerbatimString(False)

    if input.BackupName.is_Some:
        output["BackupName"] = input.BackupName.value.VerbatimString(False)

    if input.BackupCreationDateTime.is_Some:
        output["BackupCreationDateTime"] = TypeError("TimestampShape not supported")

    if input.BackupExpiryDateTime.is_Some:
        output["BackupExpiryDateTime"] = TypeError("TimestampShape not supported")

    if input.BackupStatus.is_Some:
        output["BackupStatus"] = input.BackupStatus.value

    if input.BackupType.is_Some:
        output["BackupType"] = input.BackupType.value

    if input.BackupSizeBytes.is_Some:
        output["BackupSizeBytes"] = input.BackupSizeBytes.value

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListBackupsOutput(input):
    output = {}
    if input.BackupSummaries.is_Some:
        output["BackupSummaries"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_BackupSummary(list_element) for list_element in input.BackupSummaries.value]

    if input.LastEvaluatedBackupArn.is_Some:
        output["LastEvaluatedBackupArn"] = input.LastEvaluatedBackupArn.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_UpdateGlobalTableOutput(input):
    output = {}
    if input.GlobalTableDescription.is_Some:
        output["GlobalTableDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalTableDescription(input.GlobalTableDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_ImportKeyMaterialResponse(input):
    output = {}
    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DescribeBackupOutput(input):
    output = {}
    if input.BackupDescription.is_Some:
        output["BackupDescription"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_BackupDescription(input.BackupDescription.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_DeleteItemOutput(input):
    output = {}
    if input.Attributes.is_Some:
        output["Attributes"] = {key.VerbatimString(False): com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Attributes.value.items }

    if input.ConsumedCapacity.is_Some:
        output["ConsumedCapacity"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.value)

    if input.ItemCollectionMetrics.is_Some:
        output["ItemCollectionMetrics"] = com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_ItemCollectionMetrics(input.ItemCollectionMetrics.value)

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalTable(input):
    output = {}
    if input.GlobalTableName.is_Some:
        output["GlobalTableName"] = input.GlobalTableName.value.VerbatimString(False)

    if input.ReplicationGroup.is_Some:
        output["ReplicationGroup"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_Replica(list_element) for list_element in input.ReplicationGroup.value]

    return output

def DafnyToAwsSdk_com_amazonaws_dynamodb_ListGlobalTablesOutput(input):
    output = {}
    if input.GlobalTables.is_Some:
        output["GlobalTables"] = [com_amazonaws_dynamodb.smithygenerated.dafny_to_aws_sdk.DafnyToAwsSdk_com_amazonaws_dynamodb_GlobalTable(list_element) for list_element in input.GlobalTables.value]

    if input.LastEvaluatedGlobalTableName.is_Some:
        output["LastEvaluatedGlobalTableName"] = input.LastEvaluatedGlobalTableName.value.VerbatimString(False)

    return output

def DafnyToAwsSdk_com_amazonaws_kms_VerifyResponse(input):
    output = {}
    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.SignatureValid.is_Some:
        output["SignatureValid"] = input.SignatureValid.value

    if input.SigningAlgorithm.is_Some:
        output["SigningAlgorithm"] = input.SigningAlgorithm.value

    return output

def DafnyToAwsSdk_com_amazonaws_kms_DecryptResponse(input):
    output = {}
    if input.KeyId.is_Some:
        output["KeyId"] = input.KeyId.value.VerbatimString(False)

    if input.Plaintext.is_Some:
        output["Plaintext"] = bytes(input.Plaintext.value)

    if input.EncryptionAlgorithm.is_Some:
        output["EncryptionAlgorithm"] = input.EncryptionAlgorithm.value

    return output
