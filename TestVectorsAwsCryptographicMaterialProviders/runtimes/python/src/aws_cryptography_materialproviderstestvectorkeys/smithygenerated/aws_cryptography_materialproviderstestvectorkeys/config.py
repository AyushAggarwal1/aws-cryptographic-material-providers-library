# Code generated by smithy-python-codegen DO NOT EDIT.

import aws_cryptography_materialproviderstestvectorkeys.smithygenerated.aws_cryptography_materialproviderstestvectorkeys.dafny_to_smithy
import aws_cryptography_materialproviderstestvectorkeys.smithygenerated.aws_cryptography_materialproviderstestvectorkeys.smithy_to_dafny
from dataclasses import dataclass
import module_
from software_amazon_cryptography_materialproviderstestvectorkeys_internaldafny_types import (
    KeyVectorsConfig_KeyVectorsConfig as DafnyKeyVectorsConfig,
)
from typing import Any, Callable, TypeAlias, Union

from .dafnyImplInterface import DafnyImplInterface
from null.smithygenerated.aws_cryptography_materialproviders.models import (
    DecryptMaterialsInput,
    DecryptMaterialsOutput,
    DeleteCacheEntryInput,
    GetBranchKeyIdInput,
    GetBranchKeyIdOutput,
    GetCacheEntryInput,
    GetCacheEntryOutput,
    GetClientInput,
    GetEncryptionMaterialsInput,
    GetEncryptionMaterialsOutput,
    KeyringReference,
    KmsClientReference,
    OnDecryptInput,
    OnDecryptOutput,
    OnEncryptInput,
    OnEncryptOutput,
    PutCacheEntryInput,
    UpdateUsageMetadataInput,
)
from smithy_python._private.retries import SimpleRetryStrategy
from smithy_python.interfaces.interceptor import Interceptor
from smithy_python.interfaces.retries import RetryStrategy

from .models import (
    GetKeyDescriptionInput,
    GetKeyDescriptionOutput,
    SerializeKeyDescriptionInput,
    SerializeKeyDescriptionOutput,
    TestVectorKeyringInput,
    Unit,
)


_ServiceInterceptor = Union[Interceptor[DecryptMaterialsInput, DecryptMaterialsOutput, Any, Any], Interceptor[DeleteCacheEntryInput, Unit, Any, Any], Interceptor[GetBranchKeyIdInput, GetBranchKeyIdOutput, Any, Any], Interceptor[GetCacheEntryInput, GetCacheEntryOutput, Any, Any], Interceptor[GetClientInput, KmsClientReference, Any, Any], Interceptor[GetEncryptionMaterialsInput, GetEncryptionMaterialsOutput, Any, Any], Interceptor[OnDecryptInput, OnDecryptOutput, Any, Any], Interceptor[OnEncryptInput, OnEncryptOutput, Any, Any], Interceptor[PutCacheEntryInput, Unit, Any, Any], Interceptor[UpdateUsageMetadataInput, Unit, Any, Any], Interceptor[TestVectorKeyringInput, KeyringReference, Any, Any], Interceptor[TestVectorKeyringInput, KeyringReference, Any, Any], Interceptor[GetKeyDescriptionInput, GetKeyDescriptionOutput, Any, Any], Interceptor[SerializeKeyDescriptionInput, SerializeKeyDescriptionOutput, Any, Any]]
@dataclass(init=False)
class Config:
    """Configuration for KeyVectors."""

    interceptors: list[_ServiceInterceptor]
    retry_strategy: RetryStrategy
    dafnyImplInterface: DafnyImplInterface | None

    def __init__(
        self,
        *,
        interceptors: list[_ServiceInterceptor] | None = None,
        retry_strategy: RetryStrategy | None = None,
        dafnyImplInterface: DafnyImplInterface | None = None,
    ):
        """Constructor.

        :param interceptors: The list of interceptors, which are hooks that are called
        during the execution of a request.

        :param retry_strategy: The retry strategy for issuing retry tokens and computing
        retry delays.

        :param dafnyImplInterface:
        """
        self.interceptors = interceptors or []
        self.retry_strategy = retry_strategy or SimpleRetryStrategy()
        self.dafnyImplInterface = dafnyImplInterface

# A callable that allows customizing the config object on each request.
Plugin: TypeAlias = Callable[[Config], None]

class KeyVectorsConfig(Config):
    '''
    Smithy-modelled localService Config shape for this localService.
    '''
    # TODO-Python: Add types to Config members
    key_manifiest_path: Any

    def __init__(self, key_manifiest_path, ):
        super().__init__()
        self.key_manifiest_path = key_manifiest_path

def dafny_config_to_smithy_config(dafny_config) -> KeyVectorsConfig:
    '''
    Converts the provided Dafny shape for this localService's config
    into the corresponding Smithy-modelled shape.
    '''
    return aws_cryptography_materialproviderstestvectorkeys.smithygenerated.aws_cryptography_materialproviderstestvectorkeys.dafny_to_smithy.DafnyToSmithy_aws_cryptography_materialproviderstestvectorkeys_KeyVectorsConfig(dafny_config)

def smithy_config_to_dafny_config(smithy_config) -> DafnyKeyVectorsConfig:
    '''
    Converts the provided Smithy-modelled shape for this localService's config
    into the corresponding Dafny shape.
    '''
    return aws_cryptography_materialproviderstestvectorkeys.smithygenerated.aws_cryptography_materialproviderstestvectorkeys.smithy_to_dafny.SmithyToDafny_aws_cryptography_materialproviderstestvectorkeys_KeyVectorsConfig(smithy_config)
