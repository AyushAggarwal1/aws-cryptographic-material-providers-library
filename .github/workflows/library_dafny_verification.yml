# This workflow performs static analysis checks.
name: Library Dafny verification

on:
  workflow_call:
    inputs:
      dafny:
        description: "The Dafny version to run"
        required: true
        type: string
      regenerate-code:
        description: "Regenerate code using smithy-dafny"
        required: false
        default: false
        type: boolean

jobs:
  verification:
    strategy:
      fail-fast: false
      matrix:
        library:
          [
            TestVectorsAwsCryptographicMaterialProviders,
            AwsCryptographyPrimitives,
            ComAmazonawsKms,
            ComAmazonawsDynamodb,
            AwsCryptographicMaterialProviders,
            StandardLibrary,
          ]
    runs-on: codebuild-AWS-MPL-Verification-${{ github.run_id }}-${{ github.run_attempt }}
    defaults:
      run:
        shell: bash
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
    steps:
      - name: Support longpaths
        run: |
          git config --global core.longpaths true

      - uses: actions/checkout@v4
      # The specification submodule is private so we don't have access, but we don't need
      # it to verify the Dafny code. Instead we manually pull the submodules we DO need.
      - run: git submodule update --init libraries
      - run: git submodule update --init smithy-dafny

      # When using CB MacOS runners state is kept between jobs when it comes to downloading dependencies
      # Our runner has the dafny-reportgenerator already installed but dotnet returns exit
      # code 1 if something is installed which cuases the job to fail.
      # As a workaround we remove the install.
      - name: Clear and redownload dafny-reportgenerator
        run: |
          sudo rm -rf $HOME/.dotnet/tools

      - name: Setup Dafny
        uses: dafny-lang/setup-dafny-action@v1.8.0
        with:
          dafny-version: ${{ inputs.dafny }}

      # dafny-reportgenerator requires next6
      # but only 7.0 is installed on macos-12-large
      - name: Setup .NET Core SDK '6.0.x'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"

      - name: Regenerate code using smithy-dafny if necessary
        if: ${{ inputs.regenerate-code }}
        uses: ./.github/actions/polymorph_codegen
        with:
          dafny: ${{ env.DAFNY_VERSION }}
          library: ${{ matrix.library }}
          diff-generated-code: false

      - name: Verify ${{ matrix.library }} Dafny code
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          which dafny
          make verify CORES=$CORES

      - name: Check solver resource use
        if: success() || failure()
        working-directory: ./${{ matrix.library }}
        run: |
          make dafny-reportgenerator
