# Code generated by smithy-python-codegen DO NOT EDIT.

from Wrappers import Option_None, Option_Some
from aws_cryptography_primitives_internaldafny_types import (
    CryptoConfig_CryptoConfig as DafnyCryptoConfig,
)
from dataclasses import dataclass
import module_
from typing import Any, Callable, TypeAlias, Union

from .dafnyImplInterface import DafnyImplInterface
from smithy_python._private.http import StaticEndpointResolver
from smithy_python._private.http.aiohttp_client import AIOHTTPClient
from smithy_python._private.retries import SimpleRetryStrategy
from smithy_python.interfaces import URI
from smithy_python.interfaces.http import (
    EndpointResolver,
    HTTPClient,
    HTTPRequestConfiguration,
)
from smithy_python.interfaces.interceptor import Interceptor
from smithy_python.interfaces.retries import RetryStrategy

from .models import (
    AESDecryptInput,
    AESDecryptOutput,
    AESEncryptInput,
    AESEncryptOutput,
    AesKdfCtrInput,
    AesKdfCtrOutput,
    DigestInput,
    DigestOutput,
    ECDSASignInput,
    ECDSASignOutput,
    ECDSAVerifyInput,
    ECDSAVerifyOutput,
    GenerateECDSASignatureKeyInput,
    GenerateECDSASignatureKeyOutput,
    GenerateRSAKeyPairInput,
    GenerateRSAKeyPairOutput,
    GenerateRandomBytesInput,
    GenerateRandomBytesOutput,
    GetRSAKeyModulusLengthInput,
    GetRSAKeyModulusLengthOutput,
    HMacInput,
    HMacOutput,
    HkdfExpandInput,
    HkdfExpandOutput,
    HkdfExtractInput,
    HkdfExtractOutput,
    HkdfInput,
    HkdfOutput,
    KdfCtrInput,
    KdfCtrOutput,
    RSADecryptInput,
    RSADecryptOutput,
    RSAEncryptInput,
    RSAEncryptOutput,
)


_ServiceInterceptor = Union[Interceptor[AESDecryptInput, AESDecryptOutput, Any, Any], Interceptor[AESEncryptInput, AESEncryptOutput, Any, Any], Interceptor[AesKdfCtrInput, AesKdfCtrOutput, Any, Any], Interceptor[DigestInput, DigestOutput, Any, Any], Interceptor[ECDSASignInput, ECDSASignOutput, Any, Any], Interceptor[ECDSAVerifyInput, ECDSAVerifyOutput, Any, Any], Interceptor[GenerateECDSASignatureKeyInput, GenerateECDSASignatureKeyOutput, Any, Any], Interceptor[GenerateRandomBytesInput, GenerateRandomBytesOutput, Any, Any], Interceptor[GenerateRSAKeyPairInput, GenerateRSAKeyPairOutput, Any, Any], Interceptor[GetRSAKeyModulusLengthInput, GetRSAKeyModulusLengthOutput, Any, Any], Interceptor[HkdfInput, HkdfOutput, Any, Any], Interceptor[HkdfExpandInput, HkdfExpandOutput, Any, Any], Interceptor[HkdfExtractInput, HkdfExtractOutput, Any, Any], Interceptor[HMacInput, HMacOutput, Any, Any], Interceptor[KdfCtrInput, KdfCtrOutput, Any, Any], Interceptor[RSADecryptInput, RSADecryptOutput, Any, Any], Interceptor[RSAEncryptInput, RSAEncryptOutput, Any, Any]]
@dataclass(init=False)
class Config:
    """Configuration for AwsCryptographicPrimitives."""

    interceptors: list[_ServiceInterceptor]
    retry_strategy: RetryStrategy
    http_client: HTTPClient
    http_request_config: HTTPRequestConfiguration | None
    endpoint_resolver: EndpointResolver[Any]
    endpoint_uri: str | URI | None
    dafnyImplInterface: DafnyImplInterface | None

    def __init__(
        self,
        *,
        interceptors: list[_ServiceInterceptor] | None = None,
        retry_strategy: RetryStrategy | None = None,
        http_client: HTTPClient | None = None,
        http_request_config: HTTPRequestConfiguration | None = None,
        endpoint_resolver: EndpointResolver[Any] | None = None,
        endpoint_uri: str | URI | None = None,
        dafnyImplInterface: DafnyImplInterface | None = None,
    ):
        """Constructor.

        :param interceptors: The list of interceptors, which are hooks that are called
        during the execution of a request.

        :param retry_strategy: The retry strategy for issuing retry tokens and computing
        retry delays.

        :param http_client: The HTTP client used to make requests.

        :param http_request_config: Configuration for individual HTTP requests.

        :param endpoint_resolver: The endpoint resolver used to resolve the final
        endpoint per-operation based on the configuration.

        :param endpoint_uri: A static URI to route requests to.

        :param dafnyImplInterface:
        """
        self.interceptors = interceptors or []
        self.retry_strategy = retry_strategy or SimpleRetryStrategy()
        self.http_client = http_client or AIOHTTPClient()
        self.http_request_config = http_request_config
        self.endpoint_resolver = endpoint_resolver or StaticEndpointResolver()
        self.endpoint_uri = endpoint_uri
        self.dafnyImplInterface = dafnyImplInterface

# A callable that allows customizing the config object on each request.
Plugin: TypeAlias = Callable[[Config], None]

class CryptoConfig(Config):
    # TODO: Add types to Config members

    def __init__(self, ):
        super().__init__()

def dafny_config_to_smithy_config(dafny_config) -> CryptoConfig:
    return CryptoConfig()

def smithy_config_to_dafny_config(smithy_config) -> DafnyCryptoConfig:
    return DafnyCryptoConfig()
